{"version":3,"file":"keypath-umd.js","sources":["null.js","uuid.js","lexer/token.js","lexer.js","builder/node.js","builder.js","forEach.js","interpreter.js","keypath.js"],"sourcesContent":["'use strict';\n\n/**\n * A \"clean\", empty container. Instantiating this is faster than explicitly calling `Object.create( null )`.\n * @class Null\n * @extends external:null\n */\nexport default function Null(){}\nNull.prototype = Object.create( null );\nNull.prototype.constructor =  Null;","'use strict';\n\nlet id = 0;\n\nexport default function nextId(){\n    return ++id;\n}","'use strict';\n\nimport Null from '../null';\nimport nextId from '../uuid';\n\nfunction Token( type, value ){\n    if( typeof type !== 'string' ){\n        throw new TypeError( 'type must be a string' );\n    }\n    \n    if( typeof value === 'undefined' ){\n        throw new TypeError( 'value cannot be undefined' );\n    }\n    \n    this.id = nextId();\n    this.type = type;\n    this.value = value;\n    this.length = value.length;\n}\n\nToken.prototype = new Null();\n\nToken.prototype.constructor = Token;\n\nToken.prototype.is = function( type ){\n    return this.type === type;\n};\n\nToken.prototype.toJSON = function(){\n    var json = new Null();\n    \n    json.type = this.type;\n    json.value = this.value;\n    \n    return json;\n};\n\nToken.prototype.toString = function(){\n    return String( this.value );\n};\n\nToken.prototype.valueOf = function(){\n    return this.id;\n};\n\nexport { Token as default };\n\nexport function Identifier( value ){\n    Token.call( this, 'identifier', value );\n}\n\nIdentifier.prototype = Object.create( Token.prototype );\n\nIdentifier.prototype.constructor = Identifier;\n\nexport function Literal( value ){\n    Token.call( this, 'literal', value );\n}\n\nLiteral.prototype = Object.create( Token.prototype );\n\nLiteral.prototype.constructor = Literal;\n\nexport function Punctuator( value ){\n    Token.call( this, 'punctuator', value );\n}\n\nPunctuator.prototype = Object.create( Token.prototype );\n\nPunctuator.prototype.constructor = Punctuator;","'use strict';\n\nimport Null from './null';\nimport { default as Token, Identifier, Literal, Punctuator } from './lexer/token';\n\n/**\n * @class LexerError\n * @extends SyntaxError\n * @param {external:string} message The error message\n */\nfunction LexerError( message ){\n    SyntaxError.call( this, message );    \n}\n\nLexerError.prototype = Object.create( SyntaxError.prototype );\n\n/**\n * @class Lexer\n * @extends Null\n */\nexport default function Lexer(){\n    this.buffer = '';\n}\n\nLexer.prototype = new Null();\n\nLexer.prototype.constructor = Lexer;\n\nLexer.prototype.lex = function( text ){\n    this.buffer = text;\n    this.index = 0;\n    this.tokens = [];\n    \n    const length = this.buffer.length;\n    let word = '',\n        char;\n    \n    while( this.index < length ){\n        char = this.buffer[ this.index ];\n        \n        // Identifier\n        if( this.isIdentifier( char ) ){\n            word = this.read( function( char ){\n                return !this.isIdentifier( char ) && !this.isNumeric( char );\n            } );\n            \n            this.tokens.push( new Identifier( word ) );\n        \n        // Punctuator\n        } else if( this.isPunctuator( char ) ){\n            this.tokens.push( new Punctuator( char ) );\n            this.index++;\n        \n        // Quoted String\n        } else if( this.isQuote( char ) ){\n            let quote = char;\n            \n            this.index++;\n            \n            word = this.read( function( char ){\n                return char === quote;\n            } );\n            \n            this.tokens.push( new Literal( `${ quote }${ word }${ quote }` ) );\n            \n            this.index++;\n        \n        // Numeric\n        } else if( this.isNumeric( char ) ){\n            word = this.read( function( char ){\n                return !this.isNumeric( char );\n            } );\n            \n            this.tokens.push( new Literal( word ) );\n        \n        // Whitespace\n        } else if( this.isWhitespace( char ) ){\n            this.index++;\n        \n        // Error\n        } else {\n            this.throwError( `\"${ char }\" is an invalid character` );\n        }\n        \n        word = '';\n    }\n    \n    return this.tokens;\n};\n\nLexer.prototype.isIdentifier = function( char ){\n    return 'a' <= char && char <= 'z' || 'A' <= char && char <= 'Z' || '_' === char || char === '$';\n};\n\nLexer.prototype.isPunctuator = function( char ){\n    return char === '.' || char === '(' || char === ')' || char === '[' || char === ']' || char === ',' || char === '%';\n};\n\nLexer.prototype.isWhitespace = function( char ){\n    return char === ' ' || char === '\\r' || char === '\\t' || char === '\\n' || char === '\\v' || char === '\\u00A0';\n};\n\nLexer.prototype.isQuote = function( char ){\n    return char === '\"' || char === \"'\";\n};\n\nLexer.prototype.isNumeric = function( char ){\n    return '0' <= char && char <= '9';\n};\n\nLexer.prototype.read = function( until ){\n    let start = this.index,\n        char;\n    \n    while( this.index < this.buffer.length ){\n        char = this.buffer[ this.index ];\n        \n        if( until.call( this, char ) ){\n            break;\n        }\n        \n        this.index++;\n    }\n    \n    return this.buffer.slice( start, this.index );\n};\n\nLexer.prototype.throwError = function( message ){\n    throw new LexerError( message );\n};\n\nLexer.prototype.toJSON = function(){\n    let json = new Null();\n    \n    json.buffer = this.buffer;\n    \n    return json;\n};\n","'use strict';\n\nimport Null from '../null';\nimport nextId from '../uuid';\n\n/**\n * @class Node\n * @extends Null\n * @param {external:string} type The type of node\n */\nfunction Node( type ){\n    \n    if( typeof type !== 'string' ){\n        throw new TypeError( 'type must be a string' );\n    }\n    \n    this.id = nextId();\n    this.type = type;\n}\n\nNode.prototype = new Null();\n\nNode.prototype.constructor = Node;\n\nNode.prototype.equals = function( node ){\n    return node instanceof Node && this.id === node.id;\n};\n\nNode.prototype.is = function( type ){\n    return this.type === type;\n};\n\nNode.prototype.toJSON = function(){\n    const json = new Null();\n    \n    json.type = this.type;\n    \n    return json;\n};\n\nNode.prototype.toString = function(){\n    return String( this.type );\n};\n\nNode.prototype.valueOf = function(){\n    return this.id;\n};\n\nexport { Node as default };\n\nfunction Statement( statementType ){\n    Node.call( this, statementType );\n}\n\nStatement.prototype = Object.create( Node.prototype );\n\nStatement.prototype.constructor = Statement;\n\nfunction Expression( expressionType ){\n    Node.call( this, expressionType );\n}\n\nExpression.prototype = Object.create( Node.prototype );\n\nExpression.prototype.constructor = Expression;\n\nexport function Program( body ){\n    Node.call( this, 'Program' );\n    \n    if( !Array.isArray( body ) ){\n        throw new TypeError( 'body must be an array' );\n    }\n    \n    this.body = body || [];\n}\n\nProgram.prototype = Object.create( Node.prototype );\n\nProgram.prototype.constructor = Program;\n\nProgram.prototype.addStatement = function( statement ){\n    if( !( statement instanceof Statement ) ){\n        throw new TypeError( 'statement must be a statement' );\n    }\n    \n    this.body.push( statement );\n};\n\nProgram.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.body = this.body.map( ( node ) => node.toJSON() );\n    \n    return json;\n};\n\nexport function ExpressionStatement( expression ){\n    Statement.call( this, 'ExpressionStatement' );\n    \n    if( !( expression instanceof Expression ) ){\n        throw new TypeError( 'argument must be an expression' );\n    }\n    \n    this.expression = expression;\n}\n\nExpressionStatement.prototype = Object.create( Statement.prototype );\n\nExpressionStatement.prototype.constructor = ExpressionStatement;\n\nExpressionStatement.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.expression = this.expression.toJSON();\n    \n    return json;\n};\n\nexport function CallExpression( callee, args ){\n    Expression.call( this, 'CallExpression' );\n    \n    if( !Array.isArray( args ) ){\n        throw new TypeError( 'arguments must be an array' );\n    }\n    \n    this.callee = callee;\n    this.arguments = args;\n}\n\nCallExpression.prototype = Object.create( Expression.prototype );\n\nCallExpression.prototype.constructor = CallExpression;\n\nCallExpression.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.callee    = this.callee.toJSON();\n    json.arguments = this.arguments.map( ( node ) => node.toJSON() );\n    \n    return json;\n};\n\nexport function MemberExpression( object, property, computed ){\n    Expression.call( this, 'MemberExpression' );\n    \n    if( computed ){\n        if( !( property instanceof Expression ) ){\n            throw new TypeError( 'property must be an expression when computed is true' );\n        }\n    } else {\n        if( !( property instanceof Identifier ) ){\n            throw new TypeError( 'property must be an identifier when computed is false' );\n        }\n    }\n    \n    this.object = object;\n    this.property = property;\n    this.computed = computed || false;\n}\n\nMemberExpression.prototype = Object.create( Expression.prototype );\n\nMemberExpression.prototype.constructor = MemberExpression;\n\nMemberExpression.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.object   = this.object.toJSON();\n    json.property = this.property.toJSON();\n    json.computed = this.computed;\n    \n    return json;\n};\n\nexport function Identifier( name ){\n    Expression.call( this, 'Identifier' );\n    \n    if( typeof name !== 'string' ){\n        throw new TypeError( 'name must be a string' );\n    }\n    \n    this.name = name;\n}\n\nIdentifier.prototype = Object.create( Expression.prototype );\n\nIdentifier.prototype.constructor = Identifier;\n\nIdentifier.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.name = this.name;\n    \n    return json;\n};\n\nexport function Literal( value ){\n    Expression.call( this, 'Literal' );\n    \n    const type = typeof value;\n    \n    if( 'boolean number string'.split( ' ' ).indexOf( type ) === -1 && value !== null && !( value instanceof RegExp ) ){\n        throw new TypeError( 'value must be a boolean, number, string, null, or instance of RegExp' );\n    }\n    \n    this.value = value;\n}\n\nLiteral.prototype = Object.create( Expression.prototype );\n\nLiteral.prototype.constructor = Literal;\n\nLiteral.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.value = this.value;\n    \n    return json;\n};\n\nexport function Punctuator( value ){\n    Node.call( this, 'Punctuator' );\n    \n    if( typeof value !== 'string' ){\n        throw new TypeError( 'value must be a string' );\n    }\n    \n    this.value = value;\n}\n\nPunctuator.prototype = Object.create( Node.prototype );\n\nPunctuator.prototype.constructor = Punctuator;\n\nPunctuator.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.value = this.value;\n    \n    return json;\n};","'use strict';\n\nimport Null from './null';\nimport { CallExpression, ExpressionStatement, Identifier, Literal, MemberExpression, Program, Punctuator } from './builder/node';\n\n/**\n * @class BuilderError\n * @extends SyntaxError\n * @param {external:string} message The error message\n */\nfunction BuilderError( message ){\n    SyntaxError.call( this, message );\n}\n\nBuilderError.prototype = Object.create( SyntaxError.prototype );\n\nBuilderError.prototype.constructor = BuilderError;\n\n/**\n * @class Builder\n * @extends Null\n * @param {Lexer} lexer\n */\nexport default function Builder( lexer ){\n    this.lexer = lexer;\n}\n\nBuilder.prototype = new Null();\n\nBuilder.prototype.constructor = Builder;\n\nBuilder.prototype.arguments = function(){\n    const args = [];\n    \n    if( this.peek().value !== '(' ){\n        do {\n            args.unshift( this.expression() );\n        } while( this.expect( ',' ) );\n    }\n    \n    return args;\n};\n\nBuilder.prototype.build = function( text ){\n    this.buffer = text;\n    this.tokens = this.lexer.lex( text );\n    \n    const program = this.program();\n    \n    if( this.tokens.length ){\n        this.throwError( `Unexpected token ${ this.tokens[ 0 ] } remaining` );\n    }\n    \n    return program;\n};\n\nBuilder.prototype.consume = function( expected ){\n    if( !this.tokens.length ){\n        this.throwError( 'Unexpected end of expression' );\n    }\n    \n    const token = this.expect( expected );\n    \n    if( !token ){\n        this.throwError( `Unexpected token ${ token.value } consumed` );\n    }\n    \n    return token;\n};\n\nBuilder.prototype.expect = function( first, second, third, fourth ){\n    const token = this.peek( first, second, third, fourth );\n    \n    if( token ){\n        this.tokens.pop();\n        return token;\n    }\n    \n    return undefined;\n};\n\nBuilder.prototype.expression = function(){\n    let expression = null,\n        next = this.peek();\n    \n    if( typeof next !== 'undefined' ){\n        let args, callee, object, property;\n        \n        switch( next.type ){\n            \n            case 'identifier':\n                expression = this.identifier();\n                next = this.peek();\n                \n                if( typeof next !== 'undefined' && next.type === 'punctuator' ){\n                    next.value === '.' && this.consume( '.' );\n                    property = expression;\n                    object = this.expression();\n                    expression = new MemberExpression( object, property, false );\n                }\n                break;\n            \n            case 'literal':\n                expression = this.literal();\n                break;\n                \n            case 'punctuator':\n                if( next.value === ')' ){\n                    this.consume( ')' );\n                    args = this.arguments();\n                    this.consume( '(' );\n                    callee = this.expression();\n                    expression = new CallExpression( callee, args );\n                } else if( next.value === ']' ){\n                    this.consume( ']' );\n                    property = this.literal();\n                    this.consume( '[' );\n                    object = this.expression();\n                    expression = new MemberExpression( object, property, true );\n                } else {\n                    this.throwError( `Unexpected punctuator token: ${ next.value }` );\n                }\n                break;\n            \n            default:\n                this.throwError( `Unexpected ${ next.type } token: ${ next.value }` );\n        }\n    }\n    \n    return expression;\n};\n\nBuilder.prototype.expressionStatement = function(){\n    return new ExpressionStatement( this.expression() );\n};\n\nBuilder.prototype.identifier = function(){\n    const token = this.consume();\n    \n    if( !( token.type === 'identifier' ) ){\n        this.throwError( 'Identifier expected' );\n    }\n    \n    return new Identifier( token.value );\n};\n\nBuilder.prototype.literal = function(){\n    const token = this.consume();\n    \n    if( !( token.type === 'literal' ) ){\n        this.throwError( 'Literal expected' );\n    }\n    \n    const value = token.value,\n    \n        literal = value[ 0 ] === '\"' || value[ 0 ] === \"'\" ?\n            // String Literal\n            value.substring( 1, value.length - 1 ) :\n            // Numeric Literal\n            parseFloat( value );\n    \n    return new Literal( literal );\n};\n\nBuilder.prototype.peek = function( first, second, third, fourth ){\n    const length = this.tokens.length;\n    return length ?\n        this.peekAt( length - 1, first, second, third, fourth ) :\n        undefined;\n};\n\nBuilder.prototype.peekAt = function( index, first, second, third, fourth ){\n    const token = this.tokens[ index ],\n        value = token.value;\n    \n    if( value === first || value === second || value === third || value === fourth || !arguments.length || ( !first && !second && !third && !fourth ) ){\n        return token;\n    }\n    \n    return undefined;\n};\n\nBuilder.prototype.program = function(){\n    const body = [];\n    \n    while( true ){\n        if( this.tokens.length ){\n            body.push( this.expressionStatement() );\n        } else {\n            return new Program( body );\n        }\n    }\n};\n\nBuilder.prototype.punctuator = function(){\n    const token = this.consume();\n    \n    if( !( token.type === 'punctuator' ) ){\n        throw new BuilderError( 'Punctuator expected' );\n    }\n    \n    return new Punctuator( token.value );\n};\n\nBuilder.prototype.throwError = function( message ){\n    throw new BuilderError( message );\n};\n","'use strict';\n\nexport default function forEach( arrayLike, callback ){\n    let index = 0,\n        length = arrayLike.length,\n        item;\n    \n    for( ; index < length; index++ ){\n        item = arrayLike[ index ];\n        callback( item );\n    }\n}","'use strict';\n\nimport forEach from './forEach';\nimport Null from './null';\n\nconst noop = function(){};\n\n/**\n * @class Interpreter\n * @extends Null\n * @param {Builder} builder\n */\nexport default function Interpreter( builder ){\n    this.builder = builder;\n}\n\nInterpreter.prototype = new Null();\n\nInterpreter.prototype.constructor = Interpreter;\n\nInterpreter.prototype.compile = function( expression ){\n    var ast = this.builder.build( expression ),\n        body = ast.body,\n        expressions = [],\n        interpreter = this,\n        fn;\n    \n    interpreter.expression = expression;\n    \n    forEach( body, function( statement ){\n        expressions.push( interpreter.recurse( statement.expression, false ) );\n    } );\n    \n    fn = body.length === 0 ? noop :\n        body.length === 1 ? expressions[ 0 ] :\n        function(){\n            console.log( 'FOO', arguments );\n            return 'foo';\n        };\n    \n    return function( target, create, value ){\n        return fn( target, create, value );\n    };\n};\n\nInterpreter.prototype.computedMember = function( left, right, context, expression ){\n    return function( base, create ){\n        const lhs = left( base, create );\n        let rhs, value;\n        \n        if( typeof lhs !== 'undefined' ){\n            rhs = right( base, create );\n            \n            if( create && !( rhs in lhs ) ){\n                lhs[ rhs ] = new Null();\n            }\n            \n            value = lhs[ rhs ];\n        }\n        \n        return context ?\n            { context: lhs, name: rhs, value: value } :\n            value;\n    };\n};\n\nInterpreter.prototype.identifier = function( name, context, expression ){\n    return function( base, create ){\n        let value;\n        \n        if( typeof base !== 'undefined' ){\n            if( create && !( name in base ) ){\n                base[ name ] = new Null();\n            }\n            \n            value = base[ name ];\n        }\n        \n        return context ?\n            { context: base, name: name, value: value } :\n            value;\n    };\n};\n\nInterpreter.prototype.nonComputedMember = function( left, right, context, expression ){\n    return function( base, create, value ){\n        const lhs = left( base, create );\n        let returnValue;\n        \n        if( typeof lhs !== 'undefined' ){\n            if( create && !( right in lhs ) ){\n                lhs[ right ] = value || new Null();\n            }\n            \n            returnValue = lhs[ right ];\n        }\n        \n        return context ?\n            { context: lhs, name: right, value: returnValue } :\n            returnValue;\n    };\n};\n\nInterpreter.prototype.recurse = function( node, context ){\n    const interpreter = this;\n    let left, right;\n    \n    switch( node.type ){\n        case 'CallExpression':\n            const args = [];\n            \n            forEach( node.arguments, function( expr ){\n                args.push( interpreter.recurse( expr, false ) );\n            } );\n            \n            right = interpreter.recurse( node.callee, true );\n            \n            return function( base, create ){\n                const rhs = right( base, create );\n                let value;\n                \n                if( typeof rhs.value === 'function' ){\n                    const values = args.map( ( arg ) => arg( base, create ) );\n                    value = rhs.value.apply( rhs.context, values );\n                } else if( create ){\n                    throw new Error( 'cannot create functions' );\n                }\n                \n                return context ?\n                    { value: value }:\n                    value;\n            };\n        case 'Identifier':\n            return interpreter.identifier( node.name, context, interpreter.expression );\n        case 'Literal':\n            return interpreter.value( node.value, context );\n        case 'MemberExpression':\n            left = interpreter.recurse( node.object, false );\n            right = node.computed ?\n                interpreter.recurse( node.property, false ) :\n                node.property.name;\n            \n            return node.computed ?\n                interpreter.computedMember( left, right, context, interpreter.expression ) :\n                interpreter.nonComputedMember( left, right, context, interpreter.expression );\n        case 'Program':\n            break;\n    }\n};\n\nInterpreter.prototype.value = function( value, context ){\n    return function(){\n        return context ?\n            { context: undefined, name: undefined, value: value } :\n            value;\n    };\n};","'use strict';\n\nimport Null from './null';\nimport Lexer from './lexer';\nimport Builder from './builder';\nimport Interpreter from './interpreter';\n\nconst lexer = new Lexer(),\n    builder = new Builder( lexer ),\n    intrepreter = new Interpreter( builder );\n\n/**\n * @class KeyPathExp\n * @extends Null\n * @param {external:string} pattern\n * @param {external:string} flags\n */\nfunction KeyPathExp( pattern, flags ){\n    Object.defineProperty( this, 'value', {\n        value: intrepreter.compile( pattern ),\n        configurable: false,\n        enumerable: false,\n        writable: false\n    } );\n}\n\nKeyPathExp.prototype = new Null();\n\nKeyPathExp.prototype.constructor = KeyPathExp;\n\nKeyPathExp.prototype.get = function( target ){\n    return this.value( target, false );\n};\n\nKeyPathExp.prototype.set = function( target, value ){\n    return this.value( target, true, value );\n};\n\nexport { KeyPathExp as default };"],"names":["Null","prototype","Object","create","constructor","id","nextId","Token","type","value","TypeError","length","is","toJSON","json","toString","String","valueOf","Identifier","call","Literal","Punctuator","LexerError","message","SyntaxError","Lexer","buffer","lex","text","index","tokens","word","char","isIdentifier","read","isNumeric","push","isPunctuator","isQuote","quote","isWhitespace","throwError","until","start","slice","Node","equals","node","Statement","statementType","Expression","expressionType","Program","body","Array","isArray","addStatement","statement","map","ExpressionStatement","expression","CallExpression","callee","args","arguments","MemberExpression","object","property","computed","name","split","indexOf","RegExp","BuilderError","Builder","lexer","peek","unshift","expect","build","program","consume","expected","token","first","second","third","fourth","pop","undefined","next","identifier","literal","expressionStatement","substring","peekAt","punctuator","forEach","arrayLike","callback","item","noop","Interpreter","builder","compile","ast","expressions","interpreter","fn","recurse","log","target","computedMember","left","right","context","base","lhs","rhs","nonComputedMember","returnValue","expr","values","arg","apply","Error","intrepreter","KeyPathExp","pattern","flags","defineProperty","get","set"],"mappings":"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","sourceRoot":"/source/"}