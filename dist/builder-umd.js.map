{"version":3,"file":"builder-umd.js","sources":["null.js","uuid.js","builder/node.js","builder.js"],"sourcesContent":["'use strict';\n\n/**\n * A \"clean\", empty container. Instantiating this is faster than explicitly calling `Object.create( null )`.\n * @class Null\n * @extends external:null\n */\nexport default function Null(){}\nNull.prototype = Object.create( null );\nNull.prototype.constructor =  Null;","'use strict';\n\nlet id = 0;\n\nexport default function nextId(){\n    return ++id;\n}","'use strict';\n\nimport Null from '../null';\nimport nextId from '../uuid';\n\n/**\n * @class Node\n * @extends Null\n * @param {external:string} type The type of node\n */\nfunction Node( type ){\n    \n    if( typeof type !== 'string' ){\n        throw new TypeError( 'type must be a string' );\n    }\n    \n    this.id = nextId();\n    this.type = type;\n}\n\nNode.prototype = new Null();\n\nNode.prototype.constructor = Node;\n\nNode.prototype.equals = function( node ){\n    return node instanceof Node && this.valueOf() === node.valueOf();\n};\n\nNode.prototype.is = function( type ){\n    return this.type === type;\n};\n\nNode.prototype.toJSON = function(){\n    const json = new Null();\n    \n    json.type = this.type;\n    \n    return json;\n};\n\nNode.prototype.toString = function(){\n    return String( this.type );\n};\n\nNode.prototype.valueOf = function(){\n    return this.id;\n};\n\nexport { Node as default };\n\nfunction Statement( statementType ){\n    Node.call( this, statementType );\n}\n\nStatement.prototype = Object.create( Node.prototype );\n\nStatement.prototype.constructor = Statement;\n\nfunction Expression( expressionType ){\n    Node.call( this, expressionType );\n}\n\nExpression.prototype = Object.create( Node.prototype );\n\nExpression.prototype.constructor = Expression;\n\nexport function Program( body ){\n    Node.call( this, 'Program' );\n    \n    if( !Array.isArray( body ) ){\n        throw new TypeError( 'body must be an array' );\n    }\n    \n    this.body = body || [];\n}\n\nProgram.prototype = Object.create( Node.prototype );\n\nProgram.prototype.constructor = Program;\n\nProgram.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.body = this.body.map( ( node ) => node.toJSON() );\n    \n    return json;\n};\n\nexport function ArrayExpression( elements ){\n    Expression.call( this, 'ArrayExpression' );\n    \n    if( !( Array.isArray( elements ) ) ){\n        throw new TypeError( 'elements must be a list of expressions' );\n    }\n    \n    this.elements = elements;\n}\n\nArrayExpression.prototype = Object.create( Expression.prototype );\n\nArrayExpression.prototype.constructor = ArrayExpression;\n\nArrayExpression.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.elements = this.elements.map( function( element ){\n        return element.toJSON();\n    } );\n    \n    return json;\n};\n\nexport function ExpressionStatement( expression ){\n    Statement.call( this, 'ExpressionStatement' );\n    \n    if( !( expression instanceof Expression ) ){\n        throw new TypeError( 'argument must be an expression' );\n    }\n    \n    this.expression = expression;\n}\n\nExpressionStatement.prototype = Object.create( Statement.prototype );\n\nExpressionStatement.prototype.constructor = ExpressionStatement;\n\nExpressionStatement.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.expression = this.expression.toJSON();\n    \n    return json;\n};\n\nexport function CallExpression( callee, args ){\n    Expression.call( this, 'CallExpression' );\n    \n    if( !Array.isArray( args ) ){\n        throw new TypeError( 'arguments must be an array' );\n    }\n    \n    this.callee = callee;\n    this.arguments = args;\n}\n\nCallExpression.prototype = Object.create( Expression.prototype );\n\nCallExpression.prototype.constructor = CallExpression;\n\nCallExpression.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.callee    = this.callee.toJSON();\n    json.arguments = this.arguments.map( ( node ) => node.toJSON() );\n    \n    return json;\n};\n\nexport function MemberExpression( object, property, computed ){\n    Expression.call( this, 'MemberExpression' );\n    \n    if( computed ){\n        if( !( property instanceof Expression ) ){\n            throw new TypeError( 'property must be an expression when computed is true' );\n        }\n    } else {\n        if( !( property instanceof Identifier ) ){\n            throw new TypeError( 'property must be an identifier when computed is false' );\n        }\n    }\n    \n    this.object = object;\n    this.property = property;\n    this.computed = computed || false;\n}\n\nMemberExpression.prototype = Object.create( Expression.prototype );\n\nMemberExpression.prototype.constructor = MemberExpression;\n\nMemberExpression.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.object   = this.object.toJSON();\n    json.property = this.property.toJSON();\n    json.computed = this.computed;\n    \n    return json;\n};\n\nexport function Identifier( name ){\n    Expression.call( this, 'Identifier' );\n    \n    if( typeof name !== 'string' ){\n        throw new TypeError( 'name must be a string' );\n    }\n    \n    this.name = name;\n}\n\nIdentifier.prototype = Object.create( Expression.prototype );\n\nIdentifier.prototype.constructor = Identifier;\n\nIdentifier.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.name = this.name;\n    \n    return json;\n};\n\nexport function Literal( value ){\n    Expression.call( this, 'Literal' );\n    \n    const type = typeof value;\n    \n    if( 'boolean number string'.split( ' ' ).indexOf( type ) === -1 && value !== null && !( value instanceof RegExp ) ){\n        throw new TypeError( 'value must be a boolean, number, string, null, or instance of RegExp' );\n    }\n    \n    this.value = value;\n}\n\nLiteral.prototype = Object.create( Expression.prototype );\n\nLiteral.prototype.constructor = Literal;\n\nLiteral.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.value = this.value;\n    \n    return json;\n};\n\nexport function SequenceExpression( expressions ){\n    Expression.call( this, 'SequenceExpression' );\n    \n    if( !( Array.isArray( expressions ) ) ){\n        throw new TypeError( 'expressions must be a list of expressions' );\n    }\n    \n    this.expressions = expressions;\n}\n\nSequenceExpression.prototype = Object.create( Expression.prototype );\n\nSequenceExpression.prototype.constructor = SequenceExpression;\n\nSequenceExpression.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.expressions = this.expressions.map( function( expression ){\n        return expression.toJSON();\n    } );\n    \n    return json;\n};\n\nexport function Punctuator( value ){\n    Node.call( this, 'Punctuator' );\n    \n    if( typeof value !== 'string' ){\n        throw new TypeError( 'value must be a string' );\n    }\n    \n    this.value = value;\n}\n\nPunctuator.prototype = Object.create( Node.prototype );\n\nPunctuator.prototype.constructor = Punctuator;\n\nPunctuator.prototype.toJSON = function(){\n    const json = Node.prototype.toJSON.call( this );\n    \n    json.value = this.value;\n    \n    return json;\n};","'use strict';\n\nimport Null from './null';\nimport { ArrayExpression, CallExpression, ExpressionStatement, Identifier, Literal, MemberExpression, Program, SequenceExpression /*, Punctuator*/ } from './builder/node';\n\n/**\n * @class Builder\n * @extends Null\n * @param {Lexer} lexer\n */\nfunction Builder( lexer ){\n    if( !arguments.length ){\n        throw new TypeError( 'lexer must be provided' );\n    }\n    \n    this.lexer = lexer;\n}\n\nBuilder.prototype = new Null();\n\nBuilder.prototype.constructor = Builder;\n\nBuilder.prototype.arrayExpression = function(){\n    const args = this.bracketList();\n    return new ArrayExpression( args );\n};\n\nBuilder.prototype.build = function( text ){\n    this.buffer = text;\n    this.tokens = this.lexer.lex( text );\n    \n    const program = this.program();\n    \n    if( this.tokens.length ){\n        this.throwError( `Unexpected token ${ this.tokens[ 0 ] } remaining` );\n    }\n    \n    return program;\n};\n\nBuilder.prototype.callExpression = function(){\n    const args = this.list( '(' );\n    this.consume( '(' );\n    const callee = this.expression();\n    \n    //console.log( 'CALL EXPRESSION' );\n    //console.log( '- CALLEE', callee );\n    //console.log( '- ARGUMENTS', args, args.length );\n    \n    return new CallExpression( callee, args );\n};\n\nBuilder.prototype.consume = function( expected ){\n    if( !this.tokens.length ){\n        this.throwError( 'Unexpected end of expression' );\n    }\n    \n    const token = this.expect( expected );\n    \n    if( !token ){\n        this.throwError( `Unexpected token ${ token.value } consumed` );\n    }\n    \n    return token;\n};\n\nBuilder.prototype.expect = function( first, second, third, fourth ){\n    const token = this.peek( first, second, third, fourth );\n    \n    if( token ){\n        this.tokens.pop();\n        return token;\n    }\n    \n    return undefined;\n};\n\nBuilder.prototype.expression = function(){\n    let expression = null,\n        list;\n    \n    if( this.peek() ){\n        if( this.expect( ']' ) ){\n            list = this.list( '[' );\n            if( this.tokens.length === 1 ){\n                expression = new ArrayExpression( list );\n                this.consume( '[' );\n            } else if( list.length > 1 ){\n                expression = new SequenceExpression( list );\n            } else {\n                expression = list[ 0 ];\n            }\n        } else if( this.peek().is( 'identifier' ) ){\n            expression = this.identifier();\n            \n            // Implied member expression\n            if( this.peek() && this.peek().is( 'punctuator' ) ){\n                if( this.peek( ')' ) || this.peek( ']' ) ){\n                    expression = this.memberExpression( expression, false );\n                }\n            }\n        } else if( this.peek().is( 'literal' ) ){\n            expression = this.literal();\n        }\n        \n        let next;\n        \n        while( ( next = this.expect( ')', '[', '.' ) ) ){\n            if( next.value === ')' ){\n                expression = this.callExpression();\n            } else if( next.value === '[' ){\n                expression = this.memberExpression( expression, true );\n            } else if( next.value === '.' ){\n                expression = this.memberExpression( expression, false );\n            } else {\n                this.throwError( `Unexpected token ${ next }` );\n            }\n        }\n    }\n    \n    return expression;\n};\n\nBuilder.prototype.expressionStatement = function(){\n    return new ExpressionStatement( this.expression() );\n};\n\nBuilder.prototype.identifier = function(){\n    const token = this.consume();\n    \n    if( !( token.type === 'identifier' ) ){\n        this.throwError( 'Identifier expected' );\n    }\n    \n    return new Identifier( token.value );\n};\n\nBuilder.prototype.literal = function(){\n    const token = this.consume();\n    \n    if( !( token.type === 'literal' ) ){\n        this.throwError( 'Literal expected' );\n    }\n    \n    const value = token.value,\n    \n        literal = value[ 0 ] === '\"' || value[ 0 ] === \"'\" ?\n            // String Literal\n            value.substring( 1, value.length - 1 ) :\n            // Numeric Literal\n            parseFloat( value );\n    \n    return new Literal( literal );\n};\n\nBuilder.prototype.list = function( terminator ){\n    const list = [];\n    \n    if( this.peek().value !== terminator ){\n        do {\n            if( this.peek( terminator ) ){\n                break;\n            }\n            list.unshift( this.literal() );\n        } while( this.expect( ',' ) );\n    }\n    \n    return list;\n};\n\nBuilder.prototype.memberExpression = function( property, computed ){\n    const object = this.expression();\n    \n    //console.log( 'MEMBER EXPRESSION' );\n    //console.log( '- OBJECT', object );\n    //console.log( '- PROPERTY', property );\n    //console.log( '- COMPUTED', computed );\n    \n    return new MemberExpression( object, property, computed );\n};\n\nBuilder.prototype.peek = function( first, second, third, fourth ){\n    const length = this.tokens.length;\n    return length ?\n        this.peekAt( length - 1, first, second, third, fourth ) :\n        undefined;\n};\n\nBuilder.prototype.peekAt = function( index, first, second, third, fourth ){\n    if( typeof index === 'number' ){\n        const token = this.tokens[ index ],\n            value = token.value;\n        \n        if( value === first || value === second || value === third || value === fourth || !arguments.length || ( !first && !second && !third && !fourth ) ){\n            return token;\n        }\n    }\n    \n    return undefined;\n};\n\nBuilder.prototype.program = function(){\n    const body = [];\n    \n    while( true ){\n        if( this.tokens.length ){\n            body.push( this.expressionStatement() );\n        } else {\n            return new Program( body );\n        }\n    }\n};\n\n/*\nBuilder.prototype.punctuator = function(){\n    const token = this.consume();\n    \n    if( !( token.type === 'punctuator' ) ){\n        this.throwError( 'Punctuator expected' );\n    }\n    \n    return new Punctuator( token.value );\n};\n*/\n\nBuilder.prototype.sequenceExpression = function(){\n    const args = this.bracketList();\n    return new SequenceExpression( args );\n};\n\nBuilder.prototype.throwError = function( message ){\n    throw new SyntaxError( message );\n};\n\nexport { Builder as default };"],"names":["Null","prototype","Object","create","constructor","id","nextId","Node","type","TypeError","equals","node","valueOf","is","toJSON","json","toString","String","Statement","statementType","call","Expression","expressionType","Program","body","Array","isArray","map","ArrayExpression","elements","element","ExpressionStatement","expression","CallExpression","callee","args","arguments","MemberExpression","object","property","computed","Identifier","name","Literal","value","split","indexOf","RegExp","SequenceExpression","expressions","Punctuator","Builder","lexer","length","arrayExpression","bracketList","build","text","buffer","tokens","lex","program","throwError","callExpression","list","consume","expected","token","expect","first","second","third","fourth","peek","pop","undefined","identifier","memberExpression","literal","next","expressionStatement","substring","terminator","unshift","peekAt","index","push","sequenceExpression","message","SyntaxError"],"mappings":"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","sourceRoot":"/source/"}