{"version":3,"file":"interpreter-umd.js","sources":["for-each.js","has-own-property.js","null.js","syntax.js","interpreter.js"],"sourcesContent":["'use strict';\n\n/**\n * @typedef {external:Function} ForEachCallback\n * @param {*} item\n * @param {external:number} index\n */\n\n/**\n * @function\n * @param {Array-Like} list\n * @param {ForEachCallback} callback\n */\nfunction forEach( list, callback ){\n    /*\n    var index = 0,\n        length = list.length,\n        item;\n    \n    for( ; index < length; index++ ){\n        item = list[ index ];\n        callback( item, index );\n    }\n    */\n    var index = list.length,\n        item;\n    \n    while( index-- ){\n        item = list[ index ];\n        callback( item, index );\n    }\n}\n\nexport { forEach as default };","'use strict';\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @function\n * @param {*} object\n * @param {external:string} property\n */\nfunction hasOwnProperty( object, property ){\n    return _hasOwnProperty.call( object, property );\n}\n\nexport { hasOwnProperty as default };","'use strict';\n\n/**\n * A \"clean\", empty container. Instantiating this is faster than explicitly calling `Object.create( null )`.\n * @class Null\n * @extends external:null\n */\nfunction Null(){}\nNull.prototype = Object.create( null );\nNull.prototype.constructor =  Null;\n\nexport { Null as default };","'use strict';\n\nimport Null from './null';\n\nvar Syntax = new Null();\n\nSyntax.ArrayExpression       = 'ArrayExpression';\nSyntax.CallExpression        = 'CallExpression';\nSyntax.ExpressionStatement   = 'ExpressionStatement';\nSyntax.Identifier            = 'Identifier';\nSyntax.Literal               = 'Literal';\nSyntax.MemberExpression      = 'MemberExpression';\nSyntax.Program               = 'Program';\nSyntax.SequenceExpression    = 'SequenceExpression';\n\nSyntax.EvalExpression        = 'EvalExpression';\nSyntax.LookupExpression      = 'LookupExpression';\nSyntax.LookupOperator        = '%';\nSyntax.RangeExpression       = 'RangeExpression';\nSyntax.RangeOperator         = '..';\n\nexport { Syntax as default };","'use strict';\n\nimport forEach from './for-each';\nimport hasOwnProperty from './has-own-property';\nimport Null from './null';\nimport Syntax from './syntax';\n\nvar noop = function(){},\n\n    cache = new Null();\n\n/**\n * @function Interpreter~getValue\n * @param {external:Object} scope\n * @param {external:string} name\n * @returns {*} The value of the `name` in `scope`\n */\nfunction getValue( scope, name ){\n    //console.log( '-- GET VALUE' );\n    //console.log( '--- SCOPE', scope );\n    //console.log( '--- NAME', name );\n    var index = scope.length,\n        result;\n    \n    switch( Array.isArray( scope ) && typeof name === 'string' && index ){\n        case false:\n            //console.log( '--- FALSE', name );\n            return scope[ name ];\n        \n        case 0:\n            //console.log( '--- 0', name );\n            return;\n        \n        case 1:\n            //console.log( '--- 1', name );\n            return scope[ 0 ][ name ];\n        \n        default:\n            //console.log( '--- DEFAULT', name );\n            result = new Array( index );\n            while( index-- ){\n                result[ index ] = scope[ index ][ name ];\n            }\n            return result;\n    }\n}\n\n/**\n * @function Interpreter~setValue\n * @param {external:Object} scope\n * @param {external:string} name\n * @param {*} value\n * @returns {*} The value of the `name` in `scope`\n */\nfunction setValue( scope, name, value ){\n    //if( !( hasOwnProperty( scope, name ) ) ){\n    //    scope[ name ] = value;\n    //}\n    //return scope[ name ];\n    var index = scope.length,\n        result;\n    \n    switch( Array.isArray( scope ) && typeof name === 'string' && index ){\n        case false:\n            if( !( hasOwnProperty( scope, name ) ) ){\n                scope[ name ] = value;\n            }\n            return scope[ name ];\n        \n        case 0:\n            return;\n        \n        case 1:\n            if( !( hasOwnProperty( scope[ 0 ], name ) ) ){\n                scope[ 0 ][ name ] = value;\n            }\n            return scope[ 0 ][ name ];\n        \n        default:\n            result = new Array( index );\n            while( index-- ){\n                if( !( hasOwnProperty( scope[ index ], name ) ) ){\n                    scope[ index ][ name ] = value;\n                }\n                result[ index ] = scope[ index ][ name ];\n            }\n            return result;\n    }\n}\n\n/**\n * @function Interpreter~returnZero\n * @returns {external:number} zero\n */\nfunction returnZero(){\n    return 0;\n}\n\n/**\n * @class InterpreterError\n * @extends external:SyntaxError\n * @param {external:string} message\n */\nfunction InterpreterError( message ){\n    SyntaxError.call( this, message );\n}\n\nInterpreter.prototype = Object.create( SyntaxError.prototype );\n\n/**\n * @class Interpreter\n * @extends Null\n * @param {Builder} builder\n */\nfunction Interpreter( builder ){\n    if( !arguments.length ){\n        this.throwError( 'builder cannot be undefined', TypeError );\n    }\n    \n    /**\n     * @member {Builder} Interpreter#builder\n     */\n    this.builder = builder;\n}\n\nInterpreter.prototype = new Null();\n\nInterpreter.prototype.constructor = Interpreter;\n\nInterpreter.prototype.arrayExpression = function( elements, context, assign, isRightMost ){\n    var interpreter = this,\n        isFunction = false,\n        defaultValue, element, fn, index, item, list, name, names, result;\n    \n    // List of elements\n    if( Array.isArray( elements ) ){\n        if( elements.length === 1 ){\n            element = elements[ 0 ];\n            \n            switch( element.type ){\n                case Syntax.Literal:\n                    name = item = element.value;\n                    break;\n                default:\n                    item = interpreter.recurse( element, context, assign );\n                    isFunction = true;\n                    break;\n            }\n            \n            fn = function getArrayExpression( scope, value, lookup ){\n                //console.log( 'Getting ARRAY EXPRESSION' );\n                defaultValue = isRightMost ? value : {};\n                if( isFunction ){\n                    name = item( scope, value, lookup );\n                }\n                result = assign( scope, name, defaultValue );\n                //console.log( '- ARRAY EXPRESSION RESULT', result );\n                return context ?\n                    { value: result } :\n                    result;\n            };\n        } else {\n            index = elements.length;\n            list = new Array( index );\n            result = new Array( index );\n            while( index-- ){\n                element = elements[ index ];\n                switch( element.type ){\n                    case Syntax.Literal:\n                        list[ index ] = element.value;\n                        break;\n                    default:\n                        list[ index ] = interpreter.recurse( element, false, assign );\n                        isFunction = true;\n                        break;\n                }\n            }\n            fn = function getArrayExpressionWithElementList( scope, value, lookup ){\n                //console.log( 'Getting ARRAY EXPRESSION' );\n                defaultValue = isRightMost ? value : {};\n                index = list.length;\n                while( index-- ){\n                    name = isFunction ?\n                        list[ index ]( scope, value, lookup ) :\n                        list[ index ];\n                    result[ index ] = assign( scope, name, defaultValue );\n                }\n                //console.log( '- ARRAY EXPRESSION RESULT', result );\n                return context ?\n                    { value: result } :\n                    result;\n            };\n        }\n    // Range of elements\n    } else {\n        list = interpreter.recurse( elements, false, assign );\n        \n        fn = function getArrayExpressionWithElementRange( scope, value, lookup ){\n            //console.log( 'Getting ARRAY EXPRESSION' );\n            result = [];\n            defaultValue = isRightMost ? value : {};\n            names = list( scope, value, lookup );\n            index = names.length;\n            if( index === 1 ){\n                result[ 0 ] = assign( scope, names[ 0 ], defaultValue );\n            } else {\n                while( index-- ){\n                    result[ index ] = assign( scope, names[ index ], defaultValue );\n                }\n            }\n            //console.log( '- ARRAY EXPRESSION RESULT', result );\n            return context ?\n                { value: result } :\n                result;\n        };\n    }\n    \n    return fn;\n};\n\nInterpreter.prototype.callExpression = function( callee, args, context, assign ){\n    var interpreter = this,\n        isSetting = assign === setValue,\n        list = interpreter.recurseList( args, false, assign ),\n        fn = interpreter.recurse( callee, true, assign );\n    \n    return function getCallExpression( scope, value, lookup ){\n        //console.log( 'Getting CALL EXPRESSION' );\n        //console.log( '- CALL FN', fn.name );\n        var values = [],\n            rhs = fn( scope, value, lookup ),\n            result;\n        //console.log( '- CALL RHS', rhs );\n        if( typeof rhs.value === 'function' ){\n            switch( list.length ){\n                case 0:\n                    break;\n                case 1:\n                    values[ 0 ] = list[ 0 ]( scope, value, lookup );\n                    break;\n                default:\n                    forEach( list, function( arg, index ){\n                        values[ index ] = arg( scope, value, lookup );\n                    } );\n                    break;\n            }\n            result = rhs.value.apply( rhs.context, values );\n        } else if( isSetting && typeof rhs.value === 'undefined' ){\n            this.throwError( 'cannot create call expressions' );\n        } else {\n            this.throwError( 'call expression must be a function', TypeError );\n        }\n        //console.log( '- CALL RESULT', result );\n        return context ?\n            { value: result }:\n            result;\n    };\n};\n\n/**\n * @function\n * @param {external:string} expression\n */\nInterpreter.prototype.compile = function( expression, create ){\n    var program = hasOwnProperty( cache, expression ) ?\n            cache[ expression ] :\n            cache[ expression ] = this.builder.build( expression ),\n        body = program.body,\n        interpreter = this,\n        assign, expressions, fn;\n    \n    if( typeof create !== 'boolean' ){\n        create = false;\n    }\n    \n    assign = create ?\n        setValue :\n        getValue;\n    \n    /**\n     * @member {external:string}\n     */\n    interpreter.expression = this.builder.text;\n    //console.log( '-------------------------------------------------' );\n    //console.log( 'Interpreting ', expression );\n    //console.log( '-------------------------------------------------' );\n    //console.log( 'Program', program.range );\n    interpreter.eol = program.range[ 1 ];\n    \n    switch( body.length ){\n        case 0:\n            fn = noop;\n            break;\n        case 1:\n            fn = interpreter.recurse( body[ 0 ].expression, false, assign );\n            break;\n        default:\n            expressions = [];\n            forEach( body, function( expressionStatement, index ){\n                expressions[ index ] = interpreter.recurse( expressionStatement.expression, false, assign );\n            } );\n            fn = function getProgram( scope, value, lookup ){\n                var lastValue;\n                \n                forEach( expressions, function( expression ){\n                    lastValue = expression( scope, value, lookup );\n                } );\n                \n                return lastValue;\n            };\n            break;\n    }\n    //console.log( 'FN', fn.name );\n    return fn;\n};\n\nInterpreter.prototype.computedMemberExpression = function( object, property, context, assign ){\n    var interpreter = this,\n        isFunction = false,\n        isRightMost = property.range[ 1 ] + 1 === interpreter.eol,\n        left = interpreter.recurse( object, false, assign ),\n        defaultValue, fn, index, lhs, result, rhs, right;\n    \n    switch( object.type ){\n        case Syntax.Identifier:\n            left = interpreter.identifier( object.name, false, assign );\n            break;\n        default:\n            left = interpreter.recurse( object, false, assign );\n            break;\n    }\n    \n    switch( property.type ){\n        case Syntax.Literal:\n            rhs = right = property.value;\n            break;\n        default:\n            right = interpreter.recurse( property, false, assign );\n            isFunction = true;\n            break;\n    }\n    \n    // Sequence property\n    if( property.type === Syntax.SequenceExpression ){\n        fn = function getComputedMemberExpressionWithSequenceProperty( scope, value, lookup ){\n            //console.log( 'Getting COMPUTED MEMBER' );\n            //console.log( `- ${ fn.name } LEFT `, left.name );\n            //console.log( `- ${ fn.name } RIGHT`, right.name || right );\n            lhs = left( scope, value, lookup );\n            defaultValue = isRightMost ? value : {};\n            result = [];\n            //console.log( '- COMPUTED LHS', lhs );\n            if( typeof lhs !== 'undefined' ){\n                if( isFunction ){\n                    rhs = right( scope, value, lookup );\n                }\n                //console.log( '- COMPUTED RHS', rhs );\n                if( Array.isArray( rhs ) ){\n                    forEach( rhs, function( item, index ){\n                        result[ index ] = assign( lhs, item, defaultValue );\n                    } );\n                    //console.log( '-- LIST|VALUE:LIST', result );\n                }\n            }\n            //console.log( '- COMPUTED RESULT', result );\n            return context ?\n                { context: lhs, name: rhs, value: result } :\n                result;\n        };\n    // Property\n    } else {\n        // Array object\n        if( object.type === Syntax.ArrayExpression ){\n            fn = function getComputedMemberExpressionWithArrayObject( scope, value, lookup ){\n                //console.log( 'Getting COMPUTED MEMBER' );\n                //console.log( `- ${ fn.name } LEFT `, left.name );\n                //console.log( `- ${ fn.name } RIGHT`, right.name || right );\n                lhs = left( scope, value, lookup );\n                defaultValue = isRightMost ? value : {};\n                //console.log( `- ${ fn.name } LHS`, lhs );\n                if( typeof lhs !== 'undefined' ){\n                    if( isFunction ){\n                        rhs = right( scope, value, lookup );\n                    }\n                    //console.log( `- ${ fn.name } RHS`, rhs );\n                    if( Array.isArray( lhs ) ){\n                        index = lhs.length;\n                        result = new Array( index );\n                        while( index-- ){\n                            result[ index ] = assign( lhs[ index ], rhs, defaultValue );\n                        }\n                    } else {\n                        result = assign( lhs, rhs, defaultValue );\n                    }\n                    //console.log( '-- LIST:VALUE', result );\n                }\n                //console.log( `- ${ fn.name } RESULT`, result );\n                return context ?\n                    { context: lhs, name: rhs, value: result } :\n                    result;\n            };\n        // Object\n        } else {\n            fn = function getComputedMemberExpression( scope, value, lookup ){\n                //console.log( 'Getting COMPUTED MEMBER' );\n                //console.log( `- ${ fn.name } LEFT `, left.name );\n                //console.log( `- ${ fn.name } RIGHT`, right.name || right );\n                lhs = left( scope, value, lookup );\n                defaultValue = isRightMost ? value : {};\n                //console.log( `- ${ fn.name } LHS`, lhs );\n                if( typeof lhs !== 'undefined' ){\n                    if( isFunction ){\n                        rhs = right( scope, value, lookup );\n                    }\n                    //console.log( `- ${ fn.name } RHS`, rhs );\n                    if( Array.isArray( lhs ) ){\n                        index = lhs.length;\n                        result = new Array( index );\n                        while( index-- ){\n                            result[ index ] = assign( lhs[ index ], rhs, defaultValue );\n                        }\n                    } else {\n                        result = assign( lhs, rhs, defaultValue );\n                    }\n                    //result = assign( lhs, rhs, defaultValue );\n                    //console.log( '-- VALUE:VALUE', result );\n                }\n                //console.log( `- ${ fn.name } RESULT`, result );\n                return context ?\n                    { context: lhs, name: rhs, value: result } :\n                    result;\n            };\n        }\n    }\n    \n    return fn;\n};\n\nInterpreter.prototype.evalExpression = function( tokens, context, assign ){\n    var interpreter = this,\n        text = tokens.join( '' ),\n        program = hasOwnProperty( cache, text ) ?\n            cache[ text ] :\n            cache[ text ] = this.builder.build( tokens ),\n        expression = interpreter.recurse( program.body[ 0 ].expression, false, assign ),\n        result;\n    \n    return function getEvalExpression( scope, value, lookup ){\n        //console.log( 'Getting EVAL' );\n        //console.log( '- EVAL LEFT', expression.name );\n        result = expression( scope, value, lookup );\n        //console.log( '- EVAL RESULT', result );\n        return context ?\n            { context: scope, name: undefined, value: result } :\n            result;\n    };\n};\n\nInterpreter.prototype.identifier = function( name, context, assign, isRightMost ){\n    var defaultValue, result;\n    \n    return function getIdentifier( scope, value, lookup ){\n        //console.log( 'Getting IDENTIFIER' );\n        defaultValue = isRightMost ? value : {};\n        if( typeof scope !== 'undefined' ){\n            result = assign( scope, name, defaultValue );\n        }\n        //console.log( '- NAME', name );\n        //console.log( '- IDENTIFIER RESULT', result );\n        return context ?\n            { context: scope, name: name, value: result } :\n            result;\n    };\n};\n\nInterpreter.prototype.literal = function( value, context ){\n    return function getLiteral(){\n        //console.log( 'Getting LITERAL' );\n        //console.log( '- LITERAL RESULT', value );\n        return context ?\n            { context: undefined, name: undefined, value: value } :\n            value;\n    };\n};\n\nInterpreter.prototype.lookupExpression = function( key, context, assign ){\n    var interpreter = this,\n        isFunction = false,\n        lhs = {},\n        left, result;\n    \n    switch( key.type ){\n        case Syntax.Identifier:\n            left = interpreter.identifier( key.name, true, assign );\n            isFunction = true;\n            break;\n        case Syntax.Literal:\n            lhs.value = left = key.value;\n            break;\n        default:\n            left = interpreter.recurse( key, true, assign );\n            isFunction = true;\n            break;\n    }\n            \n    return function getLookupExpression( scope, value, lookup ){\n        //console.log( 'Getting LOOKUP EXPRESSION' );\n        //console.log( '- LOOKUP LEFT', left.name || left );\n        if( isFunction ){\n            lhs = left( lookup, value, scope );\n            result = lhs.value;\n        } else {\n            result = lookup[ lhs.value ];\n        }\n        //console.log( '- LOOKUP LHS', lhs );\n        //console.log( '- LOOKUP EXPRESSION RESULT', result );\n        return context ?\n            { value: result } :\n            result;\n    };\n};\n\nInterpreter.prototype.rangeExpression = function( nl, nr, context, assign ){\n    var interpreter = this,\n        left = nl !== null ?\n            interpreter.recurse( nl, false, assign ) :\n            returnZero,\n        right = nr !== null ?\n            interpreter.recurse( nr, false, assign ) :\n            returnZero,\n        index, lhs, middle, result, rhs;\n        \n    return function getRangeExpression( scope, value, lookup ){\n        //console.log( 'Getting RANGE EXPRESSION' );\n        //console.log( '- RANGE LEFT', left.name );\n        //console.log( '- RANGE RIGHT', right.name );\n        lhs = left( scope, value, lookup );\n        rhs = right( scope, value, lookup );\n        result = [];\n        index = 1;\n        //console.log( '- RANGE LHS', lhs );\n        //console.log( '- RANGE RHS', rhs );\n        result[ 0 ] = lhs;\n        if( lhs < rhs ){\n            middle = lhs + 1;\n            while( middle < rhs ){\n                result[ index++ ] = middle++;\n            }\n        } else if( lhs > rhs ){\n            middle = lhs - 1;\n            while( middle > rhs ){\n                result[ index++ ] = middle--;\n            }\n        }\n        result[ result.length ] = rhs;\n        //console.log( '- RANGE EXPRESSION RESULT', result );\n        return context ?\n            { value: result } :\n            result;\n    };\n};\n\n/**\n * @function\n */\nInterpreter.prototype.recurse = function( node, context, assign ){\n    var isRightMost = node.range[ 1 ] === this.eol;\n    //console.log( 'Recursing on', node.type );\n    switch( node.type ){\n        \n        case Syntax.ArrayExpression: {\n            return this.arrayExpression( node.elements, context, assign, isRightMost );\n        }\n        \n        case Syntax.CallExpression: {\n            return this.callExpression( node.callee, node.arguments, context, assign );\n        }\n        \n        case Syntax.EvalExpression: {\n            return this.evalExpression( node.body, context, assign );\n        }\n        \n        case Syntax.Identifier: {\n            return this.identifier( node.name, context, assign, isRightMost );\n        }\n        \n        case Syntax.Literal: {\n            return this.literal( node.value, context );\n        }\n        \n        case Syntax.MemberExpression: {\n            return node.computed ?\n                this.computedMemberExpression( node.object, node.property, context, assign ) :\n                this.staticMemberExpression( node.object, node.property, context, assign );\n        }\n        \n        case Syntax.LookupExpression: {\n            return this.lookupExpression( node.key, context, assign );\n        }\n        \n        case Syntax.RangeExpression: {\n            return this.rangeExpression( node.left, node.right, context, assign );\n        }\n        \n        case Syntax.SequenceExpression: {\n            return this.sequenceExpression( node.expressions, context, assign );\n        }\n        \n        default:\n            this.throwError( 'Unknown node type ' + node.type );\n    }\n};\n\n/**\n * @function\n */\nInterpreter.prototype.recurseFast = function( node, context, assign ){\n    var isRightMost = node.range[ 1 ] === this.eol;\n    //console.log( 'Recursing on', node.type );\n    switch( node.type ){\n        \n        case Syntax.Identifier: {\n            return this.identifier( node.name, context, assign, isRightMost );\n        }\n        \n        case Syntax.MemberExpression: {\n            return this.staticMemberExpression( node.object, node.property, context, assign );\n        }\n        \n    }\n};\n\nInterpreter.prototype.recurseList = function( nodes, context, assign ){\n    var interpreter = this,\n        result = [];\n        \n    forEach( nodes, function( expression, index ){\n        result[ index ] = interpreter.recurse( expression, context, assign );\n    } );\n    \n    return result;\n};\n\nInterpreter.prototype.sequenceExpression = function( expressions, context, assign ){\n    var interpreter = this,\n        isFunction = false,\n        expression, fn, index, list, result;\n    // Expression List\n    if( Array.isArray( expressions ) ){\n        index = expressions.length;\n        list = new Array( index );\n        result = new Array( index );\n        while( index-- ){\n            expression = expressions[ index ];\n            if( expression.type === Syntax.Literal ){\n                result[ index ] = list[ index ] = expression.value;\n            } else {\n                list[ index ] = interpreter.recurse( expression, false, assign );\n                isFunction = true;\n            }\n        }\n        \n        fn = function getSequenceExpressionWithExpressionList( scope, value, lookup ){\n            //console.log( 'Getting SEQUENCE EXPRESSION' );\n            if( isFunction ){\n                index = list.length;\n                while( index-- ){\n                    result[ index ] = list[ index ]( scope, value, lookup );\n                }\n            }\n            //console.log( '- SEQUENCE RESULT', result );\n            return context ?\n                { value: result } :\n                result;\n        };\n    // Expression Range\n    } else {\n        list = interpreter.recurse( expressions, false, assign );\n        \n        fn = function getSequenceExpressionWithExpressionRange( scope, value, lookup ){\n            //console.log( 'Getting SEQUENCE EXPRESSION' );\n            result = list( scope, value, lookup );\n            //console.log( '- SEQUENCE RESULT', result );\n            return context ?\n                { value: result } :\n                result;\n        };\n    }\n    \n    return fn;\n};\n\nInterpreter.prototype.staticMemberExpression = function( object, property, context, assign ){\n    var interpreter = this,\n        isFunction = false,\n        isRightMost = property.range[ 1 ] === interpreter.eol,\n        defaultValue, left, lhs, rhs, result, right;\n    \n    if( object.type === Syntax.Identifier ){\n        left = interpreter.identifier( object.name, false, assign );\n    } else if( property === Syntax.LookupExpression ){\n        left = interpreter.lookupExpression( object, false, assign );\n    } else {\n        left = interpreter.recurse( object, false, assign );\n    }\n    \n    if( property.type === Syntax.Identifier ){\n        rhs = right = property.name;\n    } else if( property === Syntax.LookupExpression ){\n        right = interpreter.lookupExpression( property, false, assign );\n        isFunction = true;\n    } else {\n        right = interpreter.recurse( property, false, assign );\n        isFunction = true;\n    }\n    \n    return function getStaticMemberExpression( scope, value, lookup ){\n        //console.log( 'Getting NON-COMPUTED MEMBER' );\n        //console.log( '- NON-COMPUTED LEFT', left.name );\n        //console.log( '- NON-COMPUTED RIGHT', right.name || right );\n        lhs = left( scope, value, lookup );\n        if( isFunction ){\n            rhs = right( scope, value, lookup );\n        }\n        defaultValue = isRightMost ? value : {};\n        //console.log( '- NON-COMPUTED LHS', lhs );\n        //console.log( '- NON-COMPUTED RHS', rhs );\n        if( typeof lhs !== 'undefined' ){\n            // ?????????\n            if( typeof lhs === 'string' ){\n                lhs = assign( scope, lhs, defaultValue );\n            }\n            result = assign( lhs, rhs, defaultValue );\n        }\n        //console.log( '- NON-COMPUTED RESULT', result );\n        return context ?\n            { context: lhs, name: rhs, value: result } :\n            result;\n    };\n};\n\nInterpreter.prototype.throwError = function( message, ErrorClass ){\n    typeof ErrorClass === 'undefined' && ( ErrorClass = InterpreterError );\n    throw new ErrorClass( message );\n};\n\nexport { Interpreter as default };"],"names":[],"mappings":"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","sourceRoot":"/source/"}