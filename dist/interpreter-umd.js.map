{"version":3,"file":"interpreter-umd.js","sources":["forEach.js","hasOwnProperty.js","null.js","builder/syntax.js","interpreter.js"],"sourcesContent":["'use strict';\n\n/**\n * @typedef {external:Function} ForEachCallback\n * @param {*} item\n * @param {external:number} index\n */\n\n/**\n * @function\n * @param {Array-Like} list\n * @param {ForEachCallback} callback\n */\nfunction forEach( list, callback ){\n    let index = 0,\n        length = list.length,\n        item;\n    \n    for( ; index < length; index++ ){\n        item = list[ index ];\n        callback( item, index );\n    }\n}\n\nexport { forEach as default };","'use strict';\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @function\n * @param {*} object\n * @param {external:string} property\n */\nfunction hasOwnProperty( object, property ){\n    return _hasOwnProperty.call( object, property );\n}\n\nexport { hasOwnProperty as default };","'use strict';\n\n/**\n * A \"clean\", empty container. Instantiating this is faster than explicitly calling `Object.create( null )`.\n * @class Null\n * @extends external:null\n */\nfunction Null(){}\nNull.prototype = Object.create( null );\nNull.prototype.constructor =  Null;\n\nexport { Null as default };","'use strict';\n\nimport Null from '../null';\n\nvar Syntax = new Null();\n\nSyntax.ArrayExpression       = 'ArrayExpression';\nSyntax.CallExpression        = 'CallExpression';\nSyntax.ExpressionStatement   = 'ExpressionStatement';\nSyntax.Identifier            = 'Identifier';\nSyntax.Literal               = 'Literal';\nSyntax.MemberExpression      = 'MemberExpression';\nSyntax.LookupExpression      = 'LookupExpression';\nSyntax.LookupOperator        = '%';\nSyntax.Program               = 'Program';\nSyntax.RangeExpression       = 'RangeExpression';\nSyntax.RangeOperator         = '..';\nSyntax.SequenceExpression    = 'SequenceExpression';\n\nexport { Syntax as default };","'use strict';\n\nimport forEach from './forEach';\nimport hasOwnProperty from './hasOwnProperty';\nimport Null from './null';\nimport Syntax from './builder/syntax';\n\nvar noop = function(){},\n\n    cache = new Null();\n\n/**\n * @function Interceptor~getValue\n */\nfunction getValue( scope, name ){\n    return scope[ name ];\n}\n\n/**\n * @function Interceptor~setValue\n */\nfunction setValue( scope, name, value ){\n    if( !( hasOwnProperty( scope, name ) ) ){\n        scope[ name ] = value;\n    }\n    return scope[ name ];\n}\n\n/**\n * @function Interceptor~returnZero\n * @returns {external:number} zero\n */\nfunction returnZero(){\n    return 0;\n}\n\n/**\n * @class Interpreter\n * @extends Null\n * @param {Builder} builder\n */\nfunction Interpreter( builder ){\n    if( !arguments.length ){\n        throw new TypeError( 'builder cannot be undefined' );\n    }\n    \n    /**\n     * @member {Builder} Interpreter#builder\n     */\n    this.builder = builder;\n}\n\nInterpreter.prototype = new Null();\n\nInterpreter.prototype.constructor = Interpreter;\n\n/**\n * @function\n * @param {external:string} expression\n */\nInterpreter.prototype.compile = function( expression, create ){\n    var program = hasOwnProperty( cache, expression ) ?\n            cache[ expression ] :\n            cache[ expression ] = this.builder.build( expression ),\n        body = program.body,\n        interpreter = this,\n        assign, expressions, fn;\n    \n    if( typeof create !== 'boolean' ){\n        create = false;\n    }\n    \n    assign = create ?\n        setValue :\n        getValue;\n    \n    /**\n     * @member {external:string}\n     */\n    interpreter.expression = this.builder.text;\n    //console.log( '-------------------------------------------------' );\n    //console.log( 'Interpreting ', expression );\n    //console.log( '-------------------------------------------------' );\n    //console.log( 'Program', program.range );\n    interpreter.eol = program.range[ 1 ];\n    \n    switch( body.length ){\n        case 0:\n            fn = noop;\n            break;\n        case 1:\n            fn = interpreter.recurse( body[ 0 ].expression, false, assign );\n            break;\n        default:\n            expressions = [];\n            forEach( body, function( expressionStatement, index ){\n                expressions[ index ] = interpreter.recurse( expressionStatement.expression, false, assign );\n            } );\n            fn = function getProgram( scope, value, lookup ){\n                var lastValue;\n                \n                forEach( expressions, function( expression ){\n                    lastValue = expression( scope, value, lookup );\n                } );\n                \n                return lastValue;\n            };\n            break;\n    }\n    \n    //console.log( 'FN', fn.name );\n    \n    return fn;\n};\n\n/**\n * @function\n */\nInterpreter.prototype.recurse = function( node, context, assign ){\n    var interpreter = this,\n        isRightMost = false,\n        \n        args, fn, left, right;\n    //console.log( 'Recursing on', node.type );\n    switch( node.type ){\n        \n        case Syntax.ArrayExpression: {\n            isRightMost = node.range[ 1 ] === interpreter.eol;\n            \n            if( Array.isArray( node.elements ) ){\n                args = interpreter.recurseList( node.elements, false, assign );\n                fn = function getArrayExpression( scope, value, lookup ){\n                    //console.log( 'Getting ARRAY EXPRESSION' );\n                    var result = [], name;\n                    switch( args.length ){\n                        case 0:\n                            break;\n                        case 1:\n                            name = args[ 0 ]( scope, value, lookup );\n                            result[ 0 ] = assign( scope, name, isRightMost ? value : {} );\n                            break;\n                        default:\n                            forEach( args, function( arg, index ){\n                                name = arg( scope, value, lookup );\n                                result[ index ] = assign( scope, name, isRightMost ? value : {} );\n                            } );\n                            break;\n                    }\n                    //console.log( '- ARRAY EXPRESSION RESULT', result );\n                    return context ?\n                        { value: result } :\n                        result;\n                };\n            } else {\n                args = interpreter.recurse( node.elements, false, assign );\n                fn = function getArrayExpression( scope, value, lookup ){\n                    //console.log( 'Getting ARRAY EXPRESSION' );\n                    var result = [],\n                        names = args( scope, value, lookup );\n                    switch( names.length ){\n                        case 0:\n                            break;\n                        case 1:\n                            result[ 0 ] = assign( scope, names[ 0 ], isRightMost ? value : {} );\n                            break;\n                        default:\n                            forEach( names, function( name, index ){\n                                result[ index ] = assign( scope, name, isRightMost ? value : {} );\n                            } );\n                            break;\n                    }\n                    //console.log( '- ARRAY EXPRESSION RESULT', result );\n                    return context ?\n                        { value: result } :\n                        result;\n                };\n            }\n            \n            return fn;\n        }\n        \n        case Syntax.CallExpression: {\n            args = interpreter.recurseList( node.arguments, false, assign );\n            right = interpreter.recurse( node.callee, true, assign );\n            \n            return function getCallExpression( scope, value, lookup ){\n                //console.log( 'Getting CALL EXPRESSION' );\n                //console.log( '- RIGHT', right.name );\n                var values = [],\n                    rhs = right( scope, value, lookup ),\n                    result;\n                //console.log( '- RHS', rhs );\n                if( typeof rhs.value === 'function' ){\n                    values = [];\n                    switch( args.length ){\n                        case 0:\n                            break;\n                        case 1:\n                            values[ 0 ] = args[ 0 ]( scope, value, lookup );\n                            break;\n                        default:\n                            forEach( args, function( arg, index ){\n                                values[ index ] = arg( scope, value, lookup );\n                            } );\n                            break;\n                    }\n                    result = rhs.value.apply( rhs.context, values );\n                } else if( create && typeof rhs.value === 'undefined' ){\n                    throw new Error( 'cannot create call expressions' );\n                } else {\n                    throw new TypeError( 'call expression must be a function' );\n                }\n                //console.log( '- CALL RESULT', result );\n                return context ?\n                    { value: result }:\n                    result;\n            };\n        }\n        \n        case Syntax.Identifier: {\n            isRightMost = node.range[ 1 ] === interpreter.eol;\n            \n            return function getIdentifier( scope, value, lookup ){\n                //console.log( 'Getting IDENTIFIER' );\n                var name = node.name,\n                    result;\n                if( typeof scope !== 'undefined' ){\n                    result = assign( scope, name, isRightMost ? value : {} );\n                }\n                //console.log( '- NAME', name );\n                //console.log( '- IDENTIFIER RESULT', result );\n                return context ?\n                    { context: scope, name: name, value: result } :\n                    result;\n            };\n        }\n        \n        case Syntax.Literal: {\n            return function getLiteral( scope ){\n                var result = node.value;\n                //console.log( 'Getting LITERAL' );\n                //console.log( '- LITERAL RESULT', result );\n                return context ?\n                    { context: undefined, name: undefined, value: result } :\n                    result;\n            };\n        }\n        \n        case Syntax.MemberExpression: {\n            left = interpreter.recurse( node.object, false, assign );\n            isRightMost = node.property.range[ 1 ] + 1 === interpreter.eol;\n            \n            // Computed\n            if( node.computed ){\n                right = interpreter.recurse( node.property, false, assign );\n                \n                if( node.property.type === Syntax.SequenceExpression ){\n                    fn = function getComputedMember( scope, value, lookup ){\n                        //console.log( 'Getting COMPUTED MEMBER' );\n                        //console.log( '- COMPUTED LEFT', left.name );\n                        //console.log( '- COMPUTED RIGHT', right.name );\n                        var lhs = left( scope, value, lookup ),\n                            result = [],\n                            rhs;\n                        //console.log( '- COMPUTED LHS', lhs );\n                        if( typeof lhs !== 'undefined' ){\n                            rhs = right( scope, value, lookup );\n                            //console.log( '- COMPUTED RHS', rhs );\n                            if( Array.isArray( rhs ) ){\n                                forEach( rhs, function( item, index ){\n                                    result[ index ] = assign( lhs, item, isRightMost ? value : {} );\n                                } );\n                                //console.log( '-- LIST|VALUE:LIST', result );\n                            }\n                        }\n                        //console.log( '- COMPUTED RESULT', result );\n                        return context ?\n                            { context: lhs, name: rhs, value: result } :\n                            result;\n                    };\n                } else {\n                    if( node.object.type === Syntax.ArrayExpression ){\n                        fn = function getComputedMember( scope, value, lookup ){\n                            //console.log( 'Getting COMPUTED MEMBER' );\n                            //console.log( '- COMPUTED LEFT', left.name );\n                            //console.log( '- COMPUTED RIGHT', right.name );\n                            var lhs = left( scope, value, lookup ),\n                                result, rhs;\n                            //console.log( '- COMPUTED LHS', lhs );\n                            if( Array.isArray( lhs ) ){\n                                rhs = right( scope, value, lookup );\n                                //console.log( '- COMPUTED RHS', rhs );\n                                if( typeof rhs === 'number' ){\n                                    result = assign( lhs, rhs, isRightMost ? value : {} );\n                                } else {\n                                    if( lhs.length === 1 ){\n                                        result = assign( lhs[ 0 ], rhs, isRightMost ? value : {} );\n                                    } else {\n                                        result = [];\n                                        forEach( lhs, function( item, index ){\n                                            result[ index ] = assign( item, rhs, isRightMost ? value : {} );\n                                        } );\n                                    }\n                                }\n                                //console.log( '-- LIST:VALUE', result );\n                            }\n                            //console.log( '- COMPUTED RESULT', result );\n                            return context ?\n                                { context: lhs, name: rhs, value: result } :\n                                result;\n                        };\n                    } else {\n                        fn = function getComputedMember( scope, value, lookup ){\n                            //console.log( 'Getting COMPUTED MEMBER' );\n                            //console.log( '- COMPUTED LEFT', left.name );\n                            //console.log( '- COMPUTED RIGHT', right.name );\n                            var lhs = left( scope, value, lookup ),\n                                result,\n                                rhs;\n                            //console.log( '- COMPUTED LHS', lhs );\n                            if( typeof lhs !== 'undefined' ){\n                                rhs = right( scope, value, lookup );\n                                //console.log( '- COMPUTED RHS', rhs );\n                                result = assign( lhs, rhs, isRightMost ? value : {} );\n                                //console.log( '-- VALUE:VALUE', result );\n                            }\n                            //console.log( '- COMPUTED RESULT', result );\n                            return context ?\n                                { context: lhs, name: rhs, value: result } :\n                                result;\n                        };\n                    }\n                }\n                \n            // Non-computed\n            } else {\n                right = node.property.name || interpreter.recurse( node.property, false, assign );\n                isRightMost = node.property.range[ 1 ] === interpreter.eol;\n                \n                fn = function getNonComputedMember( scope, value, lookup ){\n                    //console.log( 'Getting NON-COMPUTED MEMBER' );\n                    //console.log( '- NON-COMPUTED LEFT', left.name );\n                    //console.log( '- NON-COMPUTED RIGHT', right.name || right );\n                    var lhs = left( scope, value, lookup ),\n                        rhs = typeof right === 'function' ?\n                            right( scope, value, lookup ) :\n                            right,\n                        result;\n                    //console.log( '- NON-COMPUTED LHS', lhs );\n                    //console.log( '- NON-COMPUTED RHS', rhs );\n                    if( typeof lhs !== 'undefined' ){\n                        if( typeof lhs === 'string' ){\n                            lhs = assign( scope, lhs, isRightMost ? value : {} );\n                        }\n                        if( !Array.isArray( lhs ) ){\n                            result = assign( lhs, rhs, isRightMost ? value : {} );\n                            //console.log( '-- VALUE:VALUE', result );\n                        } else {\n                            if( lhs.length === 1 ){\n                                result = assign( lhs[ 0 ], rhs, isRightMost ? value : {} );\n                            } else {\n                                result = [];\n                                forEach( lhs, function( item, index ){\n                                    result[ index ] = assign( item, rhs, isRightMost ? value : {} );\n                                } );\n                            }\n                            //console.log( '-- LIST:VALUE', result );\n                        }\n                    }\n                    //console.log( '- NON-COMPUTED RESULT', result );\n                    return context ?\n                        { context: lhs, name: rhs, value: result } :\n                        result;\n                };\n            }\n            \n            return fn;\n        }\n        \n        case Syntax.LookupExpression: {\n            left = interpreter.recurse( node.key, true, assign );\n            \n            return function getLookupExpression( scope, value, lookup ){\n                //console.log( 'Getting PLACEHOLDER EXPRESSION' );\n                var lhs = left( scope, value, lookup ),\n                    key = typeof lhs.name !== 'undefined' ?\n                        // Identifier\n                        lhs.name :\n                        // Numeric Literal\n                        lhs.value - 1,\n                    result = lookup[ key ];\n                //console.log( '- PLACEHOLDER LHS', lhs );\n                //console.log( '- PLACEHOLDER EXPRESSION RESULT', result );\n                return context ?\n                    { value: result } :\n                    result;\n            };\n        }\n        \n        case Syntax.RangeExpression: {\n            left = node.left !== null ?\n                interpreter.recurse( node.left, false, assign ) :\n                returnZero;\n            right = node.right !== null ?\n                interpreter.recurse( node.right, false, assign ) :\n                returnZero;\n            return function getRangeExpression( scope, value, lookup ){\n                 //console.log( 'Getting RANGE EXPRESSION' );\n                 //console.log( '- RANGE LEFT', left.name );\n                 //console.log( '- RANGE RIGHT', right.name );\n                 var lhs = left( scope, value, lookup ),\n                    rhs = right( scope, value, lookup ),\n                    result = [],\n                    index = 1,\n                    middle;\n                 //console.log( '- RANGE LHS', lhs );\n                 //console.log( '- RANGE RHS', rhs );\n                 result[ 0 ] = lhs;\n                 if( lhs < rhs ){\n                     middle = lhs + 1;\n                     while( middle < rhs ){\n                         result[ index++ ] = middle++;\n                     }\n                 } else if( lhs > rhs ){\n                     middle = lhs - 1;\n                     while( middle > rhs ){\n                         result[ index++ ] = middle--;\n                     }\n                 }\n                 result[ result.length ] = rhs;\n                 //console.log( '- RANGE EXPRESSION RESULT', result );\n                 return context ?\n                    { value: result } :\n                    result;\n            };\n        }\n        \n        case Syntax.SequenceExpression: {\n            \n            if( Array.isArray( node.expressions ) ){\n                args = interpreter.recurseList( node.expressions, false, assign );\n                fn = function getSequenceExpression( scope, value, lookup ){\n                    //console.log( 'Getting SEQUENCE EXPRESSION' );\n                    var result = [];\n                    forEach( args, function( arg, index ){\n                        result[ index ] = arg( scope );\n                    } );\n                    //console.log( '- SEQUENCE RESULT', result );\n                    return context ?\n                        { value: result } :\n                        result;\n                };\n            } else {\n                args = interpreter.recurse( node.expressions, false, assign );\n                fn = function getSequenceExpression( scope, value, lookup ){\n                    //console.log( 'Getting SEQUENCE EXPRESSION' );\n                    var result = args( scope, value, lookup );\n                    //console.log( '- SEQUENCE RESULT', result );\n                    return context ?\n                        { value: result } :\n                        result;\n                };\n            }\n            \n            return fn;\n        }\n        \n        default:\n            this.throwError( 'Unknown node type ' + node.type );\n    }\n};\n\nInterpreter.prototype.recurseList = function( nodes, context, assign ){\n    var interpreter = this,\n        result = [];\n        \n    forEach( nodes, function( expression, index ){\n        result[ index ] = interpreter.recurse( expression, context, assign );\n    } );\n    \n    return result;\n};\n\nInterpreter.prototype.throwError = function( message ){\n    throw new Error( message );\n};\n\nexport { Interpreter as default };"],"names":[],"mappings":"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","sourceRoot":"/source/"}