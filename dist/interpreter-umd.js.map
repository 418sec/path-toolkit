{"version":3,"file":"interpreter-umd.js","sources":["forEach.js","null.js","interpreter.js"],"sourcesContent":["'use strict';\n\nexport default function forEach( arrayLike, callback ){\n    let index = 0,\n        length = arrayLike.length,\n        item;\n    \n    for( ; index < length; index++ ){\n        item = arrayLike[ index ];\n        callback( item );\n    }\n}","'use strict';\n\n/**\n * A \"clean\", empty container. Instantiating this is faster than explicitly calling `Object.create( null )`.\n * @class Null\n * @extends external:null\n */\nexport default function Null(){}\nNull.prototype = Object.create( null );\nNull.prototype.constructor =  Null;","'use strict';\n\nimport forEach from './forEach';\nimport Null from './null';\n\nconst noop = function(){},\n\n    /**\n     * @namespace\n     */\n    interpret = new Null();\n\n/**\n * @function\n * @param {Interpreter} interpeter\n * @param {Node} node\n * @param {external:boolean} context\n * @returns {external:Function} The interpreted expression.\n */\ninterpret.ArrayExpression = function( interpreter, node, context ){\n    const args = [];\n    \n    forEach( node.elements, function( expr ){\n        args.push( interpreter.recurse( expr, false ) );\n    } );\n    \n    return function( base, value ){\n        //console.log( 'ARRAY EXPRESSION' );\n        \n        let result = [];\n        \n        forEach( args, function( arg ){\n            result.push( base[ arg( base, value ) ] );\n        } );\n        \n        if( result.length === 1 ){\n            result = result[ 0 ];\n        }\n        \n        //console.log( '- ARRAY RESULT', result );\n        \n        return context ?\n            { value: result } :\n            result;\n    };\n};\n\n/**\n * @function\n * @param {Interpreter} interpeter\n * @param {Node} node\n * @param {external:boolean} context\n * @returns {external:Function} The interpreted expression.\n */\ninterpret.CallExpression = function( interpreter, node, context ){\n    const args = [];\n            \n    forEach( node.arguments, function( expr ){\n        args.push( interpreter.recurse( expr, false ) );\n    } );\n    \n    const right = interpreter.recurse( node.callee, true );\n    \n    return function( base, value ){\n        //console.log( 'CALL EXPRESSION' );\n        const rhs = right( base, value );\n        let result;\n        \n        if( typeof rhs.value === 'function' ){\n            const values = args.map( function( arg ){\n                return arg( base, value );\n            } );\n            result = rhs.value.apply( rhs.context, values );\n        } else if( typeof value !== 'undefined' ){\n            throw new Error( 'cannot create functions' );\n        }\n        \n        //console.log( '- CALL RESULT', result );\n        \n        return context ?\n            { value: result }:\n            result;\n    };\n};\n\n/**\n * @function\n * @param {Interpreter} interpeter\n * @param {Node} node\n * @param {external:boolean} context\n * @returns {external:Function} The interpreted expression.\n */\ninterpret.Identifier = function( interpreter, node, context ){\n    const name = node.name;\n    return function( base, value ){\n        //console.log( 'IDENTIFIER' );\n        let result;\n        \n        if( typeof base !== 'undefined' ){\n            if( typeof value !== 'undefined' && !( name in base ) ){\n                base[ name ] = new Null();\n            }\n            \n            result = base[ name ];\n        }\n        \n        //console.log( '- NAME', name );\n        //console.log( '- IDENTIFIER RESULT', result );\n        \n        return context ?\n            { context: base, name: name, value: result } :\n            result;\n    };\n};\n\n/**\n * @function\n * @param {Interpreter} interpeter\n * @param {Node} node\n * @param {external:boolean} context\n * @returns {external:Function} The interpreted expression.\n */\ninterpret.Literal = function( interpreter, node, context ){\n    const value = node.value;\n    return function(){\n        //console.log( 'LITERAL' );\n        //console.log( '- LITERAL RESULT', value );\n        return context ?\n            { context: undefined, name: undefined, value: value } :\n            value;\n    };\n};\n\n/**\n * @function\n * @param {Interpreter} interpeter\n * @param {Node} node\n * @param {external:boolean} context\n * @returns {external:Function} The interpreted expression.\n */\ninterpret.MemberExpression = function( interpreter, node, context ){\n    const left = interpreter.recurse( node.object, false );\n    \n    let fn, lhs, result, rhs, right;\n    \n    if( node.computed ){\n        right = interpreter.recurse( node.property, false );\n        fn = function( base, value ){\n            //console.log( 'COMPUTED MEMBER' );\n            lhs = left( base, value );\n            \n            //console.log( '- COMPUTED LHS', lhs );\n            \n            if( typeof lhs !== 'undefined' ){\n                rhs = right( base, value );\n                \n                if( typeof value !== 'undefined' && !( rhs in lhs ) ){\n                    lhs[ rhs ] = new Null();\n                }\n                \n                //console.log( '- COMPUTED RHS', rhs );\n                \n                if( Array.isArray( lhs ) ){\n                    // Sequence expression\n                    if( Array.isArray( rhs ) ){\n                        result = rhs.map( function( index ){\n                            return lhs[ index ];\n                        } );\n                    // Literal expression\n                    } else if( lhs.length === 1 ){\n                        result = lhs[ 0 ];\n                    // Array expression\n                    } else {\n                        result = lhs.map( function( index ){\n                            return lhs[ index ];\n                        } );\n                    }\n                } else {\n                    result = lhs[ rhs ];\n                }\n            }\n            \n            //console.log( '- COMPUTED RESULT', result );\n            \n            return context ?\n                { context: lhs, name: rhs, value: result } :\n                result;\n        };\n    } else {\n        right = node.property.name;\n        fn = function( base, value ){\n            //console.log( 'NON-COMPUTED MEMBER' );\n            lhs = left( base, value );\n            \n            //console.log( '- NON-COMPUTED LHS', lhs );\n            \n            if( typeof lhs !== 'undefined' ){\n                if( typeof value !== 'undefined' && !( right in lhs ) ){\n                    lhs[ right ] = value || new Null();\n                }\n                \n                //console.log( '- NON-COMPUTED RIGHT', right );\n                \n                if( Array.isArray( lhs ) ){\n                    result = lhs.map( function( item ){\n                       return item[ right ];\n                    } );\n                } else {\n                    result = lhs[ right ];\n                }\n            }\n            \n            //console.log( '- NON-COMPUTED RESULT', result );\n            \n            return context ?\n                { context: lhs, name: right, value: result } :\n                result;\n        };\n    }\n    \n    return fn;\n};\n\n/**\n * @function\n * @param {Interpreter} interpeter\n * @param {Node} node\n * @param {external:boolean} context\n * @returns {external:Function} The interpreted expression.\n */\ninterpret.SequenceExpression = function( interpreter, node, context ){\n    const args = [];\n    \n    forEach( node.expressions, function( expr ){\n        args.push( interpreter.recurse( expr, false ) );\n    } );\n    \n    return function( base, value ){\n        //console.log( 'SEQUENCE EXPRESSION' );\n        \n        const result = [];\n        \n        forEach( args, function( arg ){\n            result.push( arg( base, value ) );\n        } );\n        \n        //console.log( '- SEQUENCE RESULT', result );\n        \n        return context ?\n            { value: result } :\n            result;\n    };\n};\n\n/**\n * @class Interpreter\n * @extends Null\n * @param {Builder} builder\n */\nfunction Interpreter( builder ){\n    if( !arguments.length ){\n        throw new TypeError( 'builder cannot be undefined' );\n    }\n    \n    this.builder = builder;\n}\n\nInterpreter.prototype = new Null();\n\nInterpreter.prototype.constructor = Interpreter;\n\n/**\n * @function\n * @param {external:string} expression\n */\nInterpreter.prototype.compile = function( expression ){\n    const ast = this.builder.build( expression ),\n        body = ast.body,\n        interpreter = this;\n    \n    let fn;\n    \n    interpreter.expression = expression;\n    \n    switch( body.length ){\n        case 0:\n            fn = noop;\n            break;\n        case 1:\n            fn = interpreter.recurse( body[ 0 ].expression, false );\n            break;\n        default:\n            const expressions = [];\n            forEach( body, function( statement ){\n                expressions.push( interpreter.recurse( statement.expression, false ) );\n            } );\n            fn = function( base, value ){\n                let lastValue;\n                \n                forEach( expressions, function( expression ){\n                    lastValue = expression( base, value );\n                } );\n                \n                return lastValue;\n            };\n            break;\n    }\n    \n    return fn;\n};\n\nInterpreter.prototype.recurse = function( node, context ){\n    ////console.log( 'RECURSE', node );\n    \n    if( !( node.type in interpret ) ){\n        this.throwError( `Unknown node type ${ node.type }` );\n    }\n    \n    return interpret[ node.type ]( this, node, context );\n};\n\nInterpreter.prototype.throwError = function( message ){\n    throw new Error( message );\n};\n\nexport { Interpreter as default };"],"names":[],"mappings":"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","sourceRoot":"/source/"}