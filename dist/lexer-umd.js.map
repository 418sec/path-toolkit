{"version":3,"file":"lexer-umd.js","sources":["null.js","uuid.js","lexer/token.js","lexer.js"],"sourcesContent":["'use strict';\n\n/**\n * A \"clean\", empty container. Instantiating this is faster than explicitly calling `Object.create( null )`.\n * @class Null\n * @extends external:null\n */\nexport default function Null(){}\nNull.prototype = Object.create( null );\nNull.prototype.constructor =  Null;","'use strict';\n\nlet id = 0;\n\nexport default function nextId(){\n    return ++id;\n}","'use strict';\n\nimport Null from '../null';\nimport nextId from '../uuid';\n\n/**\n * @class Token\n * @extends Null\n * @param {external:string} type The type of the token\n * @param {*} value The value of the token\n * @throws {external:TypeError} If `type` is not a string\n * @throws {external:TypeError} If `value` is undefined.\n */\nfunction Token( type, value ){\n    if( typeof type !== 'string' ){\n        throw new TypeError( 'type must be a string' );\n    }\n    \n    if( typeof value === 'undefined' ){\n        throw new TypeError( 'value cannot be undefined' );\n    }\n    \n    this.id = nextId();\n    this.type = type;\n    this.value = value;\n    this.length = value.length;\n}\n\nToken.prototype = new Null();\n\nToken.prototype.constructor = Token;\n\nToken.prototype.equals = function( token ){\n    return token instanceof Token && this.valueOf() === token.valueOf();\n};\n\n/**\n * @function\n * @param {external:string} type\n * @returns {external:boolean} Whether or not the token is the `type` provided.\n */\nToken.prototype.is = function( type ){\n    return this.type === type;\n};\n\nToken.prototype.toJSON = function(){\n    var json = new Null();\n    \n    json.type = this.type;\n    json.value = this.value;\n    \n    return json;\n};\n\nToken.prototype.toString = function(){\n    return String( this.value );\n};\n\nToken.prototype.valueOf = function(){\n    return this.id;\n};\n\nexport { Token as default };\n\nexport function Identifier( value ){\n    Token.call( this, 'identifier', value );\n}\n\nIdentifier.prototype = Object.create( Token.prototype );\n\nIdentifier.prototype.constructor = Identifier;\n\nexport function Literal( value ){\n    Token.call( this, 'literal', value );\n}\n\nLiteral.prototype = Object.create( Token.prototype );\n\nLiteral.prototype.constructor = Literal;\n\nexport function Punctuator( value ){\n    Token.call( this, 'punctuator', value );\n}\n\nPunctuator.prototype = Object.create( Token.prototype );\n\nPunctuator.prototype.constructor = Punctuator;","'use strict';\n\nimport Null from './null';\nimport { Identifier, Literal, Punctuator } from './lexer/token';\n\n/**\n * @class LexerError\n * @extends SyntaxError\n * @param {external:string} message The error message\n */\nfunction LexerError( message ){\n    SyntaxError.call( this, message );    \n}\n\nLexerError.prototype = Object.create( SyntaxError.prototype );\n\n/**\n * @class Lexer\n * @extends Null\n */\nexport default function Lexer(){\n    this.buffer = '';\n}\n\nLexer.prototype = new Null();\n\nLexer.prototype.constructor = Lexer;\n\nLexer.prototype.lex = function( text ){\n    this.buffer = text;\n    this.index = 0;\n    this.tokens = [];\n    \n    const length = this.buffer.length;\n    let word = '',\n        char;\n    \n    while( this.index < length ){\n        char = this.buffer[ this.index ];\n        \n        // Identifier\n        if( this.isIdentifier( char ) ){\n            word = this.read( function( char ){\n                return !this.isIdentifier( char ) && !this.isNumeric( char );\n            } );\n            \n            this.tokens.push( new Identifier( word ) );\n        \n        // Punctuator\n        } else if( this.isPunctuator( char ) ){\n            this.tokens.push( new Punctuator( char ) );\n            this.index++;\n        \n        // Quoted String\n        } else if( this.isQuote( char ) ){\n            let quote = char;\n            \n            this.index++;\n            \n            word = this.read( function( char ){\n                return char === quote;\n            } );\n            \n            this.tokens.push( new Literal( `${ quote }${ word }${ quote }` ) );\n            \n            this.index++;\n        \n        // Numeric\n        } else if( this.isNumeric( char ) ){\n            word = this.read( function( char ){\n                return !this.isNumeric( char );\n            } );\n            \n            this.tokens.push( new Literal( word ) );\n        \n        // Whitespace\n        } else if( this.isWhitespace( char ) ){\n            this.index++;\n        \n        // Error\n        } else {\n            this.throwError( `\"${ char }\" is an invalid character` );\n        }\n        \n        word = '';\n    }\n    \n    return this.tokens;\n};\n\nLexer.prototype.isIdentifier = function( char ){\n    return 'a' <= char && char <= 'z' || 'A' <= char && char <= 'Z' || '_' === char || char === '$';\n};\n\nLexer.prototype.isPunctuator = function( char ){\n    return char === '.' || char === '(' || char === ')' || char === '[' || char === ']' || char === ',' || char === '%';\n};\n\nLexer.prototype.isWhitespace = function( char ){\n    return char === ' ' || char === '\\r' || char === '\\t' || char === '\\n' || char === '\\v' || char === '\\u00A0';\n};\n\nLexer.prototype.isQuote = function( char ){\n    return char === '\"' || char === \"'\";\n};\n\nLexer.prototype.isNumeric = function( char ){\n    return '0' <= char && char <= '9';\n};\n\nLexer.prototype.read = function( until ){\n    let start = this.index,\n        char;\n    \n    while( this.index < this.buffer.length ){\n        char = this.buffer[ this.index ];\n        \n        if( until.call( this, char ) ){\n            break;\n        }\n        \n        this.index++;\n    }\n    \n    return this.buffer.slice( start, this.index );\n};\n\nLexer.prototype.throwError = function( message ){\n    throw new LexerError( message );\n};\n\nLexer.prototype.toJSON = function(){\n    const json = new Null();\n    \n    json.buffer = this.buffer;\n    json.tokens = this.tokens.map( function( token ){\n        return token.toJSON();\n    } );\n    \n    return json;\n};\n"],"names":["Null","prototype","Object","create","constructor","id","nextId","Token","type","value","TypeError","length","equals","token","valueOf","is","toJSON","json","toString","String","Identifier","call","Literal","Punctuator","LexerError","message","SyntaxError","Lexer","buffer","lex","text","index","tokens","word","char","isIdentifier","read","isNumeric","push","isPunctuator","isQuote","quote","isWhitespace","throwError","until","start","slice","map"],"mappings":"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","sourceRoot":"/source/"}