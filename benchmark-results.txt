[21:16:43] Using gulpfile ~/projects/keypath.js/gulpfile.js
[21:16:43] Starting 'dist'...
[21:16:44] Distributing dist/interpreter-umd.js.map
[21:16:44] Distributing dist/builder-umd.js.map
[21:16:44] Distributing dist/tk-umd.js.map
[21:16:44] Distributing dist/lexer-umd.js.map
[21:16:44] Distributing dist/keypath-umd.js.map
[21:16:44] Distributing dist/kp-umd.js.map
[21:16:44] Distributing dist/interpreter-umd.js
[21:16:44] Distributing dist/tk-umd.js
[21:16:44] Distributing dist/lexer-umd.js
[21:16:44] Distributing dist/builder-umd.js
[21:16:44] Distributing dist/kp-umd.js
[21:16:44] Distributing dist/keypath-umd.js
[21:16:44] Distributing 12 items
[21:16:44] Finished 'dist' after 1.24 s
[21:16:44] Starting 'benchmark'...
[21:16:44] Benchmarking benchmark/00-run-get-dot-index.js
[21:16:44] Running suite Runtime:Get:Dot:Index [/home/aaron/projects/keypath.js/benchmark/00-run-get-dot-index.js]...
[21:16:49]    tk#get x 2,459,832 ops/sec ±0.55% (98 runs sampled)
[21:16:55]    keypather#get x 58,087 ops/sec ±0.79% (98 runs sampled)
[21:17:00]    lodash#get x 1,153,177 ops/sec ±0.50% (101 runs sampled)
[21:17:01] Fastest test is tk#get at 2.1x faster than lodash#get
[21:17:01] Benchmarking benchmark/10-pre-get-dot-index.js
[21:17:01] Running suite Precompiled:Get:Dot:Index [/home/aaron/projects/keypath.js/benchmark/10-pre-get-dot-index.js]...
[21:17:06]    tk#get x 3,650,871 ops/sec ±0.33% (100 runs sampled)
[21:17:11]    lodash#get x 3,527,544 ops/sec ±0.44% (100 runs sampled)
[21:17:11] Fastest test is tk#get at 1.03x faster than lodash#get
[21:17:11] Benchmarking benchmark/20-run-get-dot-prop.js
[21:17:12] Running suite Runtime:Get:Dot:Property [/home/aaron/projects/keypath.js/benchmark/20-run-get-dot-prop.js]...
[21:17:17]    kp x 625,652 ops/sec ±0.47% (95 runs sampled)
[21:17:22]    tk#get x 2,275,981 ops/sec ±2.56% (97 runs sampled)
[21:17:28]    keypather#get x 54,234 ops/sec ±1.91% (90 runs sampled)
[21:17:33]    lodash#get x 599,247 ops/sec ±2.46% (97 runs sampled)
[21:17:33] Fastest test is tk#get at 3.6x faster than kp
[21:17:33] Benchmarking benchmark/30-pre-get-dot-prop.js
[21:17:33] Running suite Precompiled:Get:Dot:Property [/home/aaron/projects/keypath.js/benchmark/30-pre-get-dot-prop.js]...
[21:17:39]    KeyPathExp#get x 1,172,256 ops/sec ±0.77% (95 runs sampled)
[21:17:44]    tk#get-tokenized x 3,521,356 ops/sec ±0.28% (102 runs sampled)
[21:17:50]    lodash#get x 3,153,453 ops/sec ±3.08% (100 runs sampled)
[21:17:50] Fastest test is tk#get-tokenized at 1.12x faster than lodash#get
[21:17:50] Benchmarking benchmark/31-wtf.js
[21:17:50] Running suite WTF - Chrome V8 string.split optimization [/home/aaron/projects/keypath.js/benchmark/31-wtf.js]...
[21:17:55]    tk#dotSplit x 3,441,117 ops/sec ±0.45% (100 runs sampled)
[21:18:01]    tk#builtTokens x 1,036,164 ops/sec ±0.99% (98 runs sampled)
[21:18:06]    lodash#dotSplit x 3,248,305 ops/sec ±0.37% (100 runs sampled)
[21:18:12]    lodash#builtTokens x 1,027,091 ops/sec ±0.48% (100 runs sampled)
[21:18:17]    simpleGet#dotSplit x 11,480,800 ops/sec ±0.47% (98 runs sampled)
[21:18:23]    simpleGet#builtTokens x 1,397,580 ops/sec ±1.16% (96 runs sampled)
[21:18:23] Fastest test is simpleGet#dotSplit at 3.3x faster than tk#dotSplit
[21:18:23] Benchmarking benchmark/40-run-get-bracket-index.js
[21:18:23] Running suite Runtime:Get:Bracket:Index [/home/aaron/projects/keypath.js/benchmark/40-run-get-bracket-index.js]...
[21:18:28]    kp x 444,235 ops/sec ±0.95% (100 runs sampled)
[21:18:34]    tk#get x 1,914,755 ops/sec ±0.48% (93 runs sampled)
[21:18:39]    keypather#get x 18,552 ops/sec ±2.12% (95 runs sampled)
[21:18:45]    lodash#get x 1,098,939 ops/sec ±0.41% (100 runs sampled)
[21:18:45] Fastest test is tk#get at 1.74x faster than lodash#get
[21:18:45] Benchmarking benchmark/41-run-get-bracket-index-array.js
[21:18:45] Running suite Run:Get:Bracket:Index:Array [/home/aaron/projects/keypath.js/benchmark/41-run-get-bracket-index-array.js]...
[21:18:50]    kp x 902,198 ops/sec ±0.48% (101 runs sampled)
[21:18:50] Benchmarking benchmark/50-pre-get-bracket-index.js
[21:18:50] Running suite Precompiled:Get:Bracket:Index [/home/aaron/projects/keypath.js/benchmark/50-pre-get-bracket-index.js]...
[21:18:56]    KeyPathExp#get x 748,053 ops/sec ±1.31% (100 runs sampled)
[21:19:01]    tk#get-tokenized x 3,323,544 ops/sec ±1.21% (101 runs sampled)
[21:19:01] Fastest test is tk#get-tokenized at 4.4x faster than KeyPathExp#get
[21:19:01] Benchmarking benchmark/51-pre-get-bracket-index-array.js
[21:19:01] Running suite Precompiled:Get:Bracket:Index:Array [/home/aaron/projects/keypath.js/benchmark/51-pre-get-bracket-index-array.js]...
[21:19:07]    KeyPathExp#get x 1,667,979 ops/sec ±0.52% (100 runs sampled)
[21:19:07] Benchmarking benchmark/60-run-get-bracket-prop.js
[21:19:07] Running suite Runtime:Get:Bracket:Property [/home/aaron/projects/keypath.js/benchmark/60-run-get-bracket-prop.js]...
[21:19:12]    kp x 439,900 ops/sec ±0.54% (99 runs sampled)
[21:19:18]    tk#get x 751,264 ops/sec ±1.95% (99 runs sampled)
[21:19:24]    keypather#get x 17,019 ops/sec ±1.65% (98 runs sampled)
[21:19:29]    lodash#get x 556,891 ops/sec ±4.93% (93 runs sampled)
[21:19:29] Fastest test is tk#get at 1.35x faster than lodash#get
[21:19:29] Benchmarking benchmark/61-run-get-bracket-prop-array.js
[21:19:29] Running suite Run:Get:Bracket:Property:Array [/home/aaron/projects/keypath.js/benchmark/61-run-get-bracket-prop-array.js]...
[21:19:35]    KeyPathExp#get x 409,662 ops/sec ±0.40% (101 runs sampled)
[21:19:35] Benchmarking benchmark/65-run-get-place-prop.js
[21:19:35] Running suite Runtime:Get:Placeholder:Property [/home/aaron/projects/keypath.js/benchmark/65-run-get-place-prop.js]...
[21:19:40]    kp x 612,241 ops/sec ±0.67% (99 runs sampled)
[21:19:46]    tk#get x 696,151 ops/sec ±0.37% (99 runs sampled)
[21:19:46] Fastest test is tk#get at 1.14x faster than kp
[21:19:46] Benchmarking benchmark/67-run-get-eval-prop.js
[21:19:46] Running suite Runtime:Get:EvalProperty [/home/aaron/projects/keypath.js/benchmark/67-run-get-eval-prop.js]...
[21:19:51]    kp x 639,285 ops/sec ±0.67% (99 runs sampled)
[21:19:57]    tk#get x 473,097 ops/sec ±1.23% (98 runs sampled)
[21:19:57] Fastest test is kp at 1.35x faster than tk#get
[21:19:57] Benchmarking benchmark/70-pre-get-bracket-prop.js
[21:19:57] Running suite Precompiled:Get:Bracket:Property [/home/aaron/projects/keypath.js/benchmark/70-pre-get-bracket-prop.js]...
[21:20:02]    KeyPathExp#get x 962,756 ops/sec ±1.24% (101 runs sampled)
[21:20:08]    tk#get-tokenized x 1,055,208 ops/sec ±0.33% (103 runs sampled)
[21:20:08] Fastest test is tk#get-tokenized at 1.10x faster than KeyPathExp#get
[21:20:08] Benchmarking benchmark/71-pre-get-bracket-prop-array.js
[21:20:08] Running suite Precompiled:Get:Bracket:Property:Array [/home/aaron/projects/keypath.js/benchmark/71-pre-get-bracket-prop-array.js]...
[21:20:13]    KeyPathExp#get x 611,777 ops/sec ±0.28% (101 runs sampled)
[21:20:13] Benchmarking benchmark/75-pre-get-place-prop.js
[21:20:13] Running suite Precompiled:Get:Placeholder:Property [/home/aaron/projects/keypath.js/benchmark/75-pre-get-place-prop.js]...
[21:20:19]    KeyPathExp#get x 1,605,902 ops/sec ±0.32% (98 runs sampled)
[21:20:24]    tk#get-tokenized x 834,692 ops/sec ±3.83% (96 runs sampled)
[21:20:24] Fastest test is KeyPathExp#get at 1.92x faster than tk#get-tokenized
[21:20:24] Benchmarking benchmark/77-pre-get-eval-prop.js
[21:20:24] Running suite Precompiled:Get:EvalProperty [/home/aaron/projects/keypath.js/benchmark/77-pre-get-eval-prop.js]...
[21:20:30]    KeyPathExp#get x 777,017 ops/sec ±1.23% (99 runs sampled)
[21:20:35]    tk#get x 566,957 ops/sec ±0.37% (101 runs sampled)
[21:20:35] Fastest test is KeyPathExp#get at 1.37x faster than tk#get
[21:20:35] Benchmarking benchmark/80-run-get-fn-prop.js
[21:20:35] Running suite Runtime:Get:FunctionCall:Property [/home/aaron/projects/keypath.js/benchmark/80-run-get-fn-prop.js]...
[21:20:41]    kp            () x 836,573 ops/sec ±0.53% (98 runs sampled)
[21:20:46]    tk#get        () x 648,576 ops/sec ±0.44% (101 runs sampled)
[21:20:52]    keypather#get () x 26,706 ops/sec ±2.80% (89 runs sampled)
[21:20:57]    kp            (arg) x 820,362 ops/sec ±0.60% (100 runs sampled)
[21:21:03]    tk#get        (arg) x 767,225 ops/sec ±1.78% (101 runs sampled)
[21:21:08]    keypather#get (arg) x 21,491 ops/sec ±2.23% (85 runs sampled)
[21:21:08] Fastest test is kp            () at 1.02x faster than kp            (arg)
[21:21:08] Benchmarking benchmark/82-pre-get-fn-prop.js
[21:21:08] Running suite Precompiled:Get:FunctionCall:Property [/home/aaron/projects/keypath.js/benchmark/82-pre-get-fn-prop.js]...
[21:21:14]    KeyPathExp#get() x 2,457,821 ops/sec ±2.00% (100 runs sampled)
[21:21:19]    tk#get        () x 589,706 ops/sec ±1.36% (98 runs sampled)
[21:21:25]    KeyPathExp#get(arg) x 1,908,722 ops/sec ±0.74% (100 runs sampled)
[21:21:30]    tk#get        (arg) x 780,364 ops/sec ±0.45% (99 runs sampled)
[21:21:30] Fastest test is KeyPathExp#get() at 1.29x faster than KeyPathExp#get(arg)
[21:21:30] Benchmarking benchmark/90-set.js
[21:21:30] Running suite Dot Notation: Set [/home/aaron/projects/keypath.js/benchmark/90-set.js]...
[21:21:36]    KeyPathExp#set x 829,223 ops/sec ±0.75% (101 runs sampled)
[21:21:41]    kp x 372,246 ops/sec ±0.53% (98 runs sampled)
[21:21:47]    tk#set x 2,640,241 ops/sec ±1.48% (96 runs sampled)
[21:21:52]    tk#set-tokenized x 2,797,571 ops/sec ±0.47% (93 runs sampled)
[21:21:58]    keypather#set x 26,346 ops/sec ±2.04% (90 runs sampled)
[21:22:03]    lodash#set x 278,940 ops/sec ±0.62% (102 runs sampled)
[21:22:03] Fastest test is tk#set-tokenized at 1.06x faster than tk#set
[21:22:03] Benchmarking benchmark/91-tk.js
[21:22:03] Running suite tk [/home/aaron/projects/keypath.js/benchmark/91-tk.js]...
[21:22:09]    simple path - dot only x 2,078,953 ops/sec ±0.70% (96 runs sampled)
[21:22:14]    simple path - specials x 1,060,105 ops/sec ±0.42% (96 runs sampled)
[21:22:20]    simple path - 1 placeholder x 906,239 ops/sec ±1.43% (100 runs sampled)
[21:22:25]    simple path - 2 placeholders x 756,510 ops/sec ±2.39% (100 runs sampled)
[21:22:31]    simple path - 1 context prefix x 876,568 ops/sec ±0.58% (99 runs sampled)
[21:22:36]    function execution - no fn args x 481,127 ops/sec ±0.40% (97 runs sampled)
[21:22:42]    function execution - one fn arg x 593,981 ops/sec ±1.56% (99 runs sampled)
[21:22:47]    indirect property reference x 521,817 ops/sec ±0.54% (99 runs sampled)
[21:22:47] Fastest test is simple path - dot only at 1.96x faster than simple path - specials
[21:22:47] Benchmarking benchmark/98-builder.js
[21:22:48] Running suite Building [/home/aaron/projects/keypath.js/benchmark/98-builder.js]...
[21:22:53]    Builder#build x 247,070 ops/sec ±0.49% (99 runs sampled)
[21:22:59]    Builder#build-tokenized x 178,859 ops/sec ±0.28% (96 runs sampled)
[21:23:04]    esprima#parse x 170,359 ops/sec ±4.08% (92 runs sampled)
[21:23:04] Fastest test is Builder#build at 1.38x faster than Builder#build-tokenized
[21:23:04] Benchmarking benchmark/99-lexer.js
[21:23:04] Running suite Lexing [/home/aaron/projects/keypath.js/benchmark/99-lexer.js]...
[21:23:10]    Lexer#lex-dot x 629,446 ops/sec ±0.42% (101 runs sampled)
[21:23:15]    esprima#tokenize-dot x 215,676 ops/sec ±0.48% (102 runs sampled)
[21:23:21]    tk#getTokens-dot x 2,133,892 ops/sec ±0.50% (98 runs sampled)
[21:23:26]    Lexer#lex-bracket x 508,735 ops/sec ±0.51% (100 runs sampled)
[21:23:32]    esprima#tokenize-bracket x 154,379 ops/sec ±3.53% (93 runs sampled)
[21:23:37]    tk#getTokens-bracket x 71,538 ops/sec ±0.43% (100 runs sampled)
[21:23:43]    Lexer#lex-paren x 524,114 ops/sec ±0.29% (98 runs sampled)
[21:23:48]    esprima#tokenize-paren x 128,491 ops/sec ±4.02% (95 runs sampled)
[21:23:54]    tk#getTokens-paren x 116,821 ops/sec ±1.97% (99 runs sampled)
[21:23:54] Fastest test is tk#getTokens-dot at 3.4x faster than Lexer#lex-dot
[21:23:54] Benchmarking 23 items
[21:23:54] Finished 'benchmark' after 7.17 min
